[INFO ] 2018-08-30 08:39:19.260 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 08:39:24.933 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 08:39:24.933 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 08:39:25.047 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 08:39:26.069 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 08:39:26.212 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 08:39:26.213 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 08:39:26.213 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 08:39:26.469 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 08:39:27.387 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 08:39:27.387 (InvocesTestBase.java:141) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        invoiceext.PaymentID as "paymentid",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",

        invoiceext.contract_id as "Contract Id",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 08:39:27.585 (InvocesTestBase.java:141) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        invoiceext.PaymentID as "paymentid",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",

        invoiceext.contract_id as "Contract Id",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 08:39:27.616 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 08:39:27.624 (BasePOM.java:89) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 08:39:27.883 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 08:39:27.903 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 08:39:27.912 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 08:39:27.920 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 08:39:27.921 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 08:39:27.942 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 08:39:27.949 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 08:39:27.950 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 08:39:28.950 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 08:39:28.977 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 08:39:28.986 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 08:39:29.216 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 08:39:29.216 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:20) - 
1:8|2:Kurt Wagner|3:4|4:EUR 105|5:2018-07-13|6:YES|

[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:48) - Enter rename from:Contract date to:ContractDate
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key 2 result is ClientName
[DEBUG] 2018-08-30 08:39:29.217 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key ClientName result is 2
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 08:39:29.218 (PrintOuts.java:20) - 
1:8|2:Kurt Wagner|3:4|4:EUR 105|5:2018-07-13|6:YES|

[DEBUG] 2018-08-30 08:39:29.219 (PrintOuts.java:48) - Convert date from ContractDate: null
[INFO ] 2018-08-30 08:39:29.313 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 08:39:29.441 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 08:39:31.549 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 08:39:31.789 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 09:37:16.507 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 09:37:21.586 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 09:37:21.586 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 09:37:21.696 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 09:37:22.642 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 09:37:22.782 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 09:37:22.783 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:37:22.783 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 09:37:23.019 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:37:23.918 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 09:37:23.918 (InvocesTestBase.java:142) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        invoiceext.PaymentID as "paymentid",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",

        invoiceext.contract_id as "Contact ID",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 09:37:23.973 (InvocesTestBase.java:142) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        invoiceext.PaymentID as "paymentid",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",

        invoiceext.contract_id as "Contact ID",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 09:37:24.004 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 09:37:24.014 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 09:37:24.102 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 09:37:24.124 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 09:37:24.133 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 09:37:24.142 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 09:37:24.142 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 09:37:24.163 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 09:37:24.170 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 09:37:24.170 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 09:37:25.172 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 09:37:25.201 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 09:37:25.208 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 09:37:25.585 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 09:37:25.585 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 09:37:25.586 (PrintOuts.java:48) - Enter rename from:Contact ID to:ContractDate
[DEBUG] 2018-08-30 09:37:25.587 (PrintOuts.java:48) - Convert Int from Payment status: YES
[INFO ] 2018-08-30 09:37:25.587 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 09:37:25.588 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 09:37:27.712 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 09:37:27.786 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 09:48:24.559 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 09:48:28.378 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 09:48:28.379 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 09:48:28.466 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 09:48:29.475 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 09:48:29.610 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 09:48:29.611 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:48:29.611 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 09:48:29.844 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:48:30.790 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 09:48:30.790 (InvocesTestBase.java:129) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status",
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[INFO ] 2018-08-30 09:48:30.830 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 09:48:30.831 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 09:48:32.916 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 09:48:33.029 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 09:49:07.643 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 09:49:11.515 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 09:49:11.515 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 09:49:11.604 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 09:49:12.547 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 09:49:12.685 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 09:49:12.685 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:49:12.686 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 09:49:12.922 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 09:49:13.821 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 09:49:13.822 (InvocesTestBase.java:129) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 09:49:13.876 (InvocesTestBase.java:129) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 09:49:13.909 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 09:49:13.917 (BasePOM.java:89) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 09:49:14.003 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 09:49:14.023 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 09:49:14.031 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 09:49:14.038 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 09:49:14.038 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 09:49:14.059 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 09:49:14.067 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 09:49:14.067 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 09:49:15.067 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 09:49:15.090 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 09:49:15.098 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 09:49:15.421 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 09:49:15.421 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key 2 result is ClientName
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 09:49:15.422 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key ClientName result is 2
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 09:49:15.423 (PrintOuts.java:48) - Convert date from Payment date: 2018-06-06
[DEBUG] 2018-08-30 09:49:15.438 (ConverDates.java:75) - success: false. input: 2018-06-06 → localDate: -999999999-01-01 → formatted: 01-янв.-+1000000000 → outputImproper: 01-янв-+1000000000
[DEBUG] 2018-08-30 09:49:15.439 (ConverDates.java:84) - Send converted date +1000000000-01-01
[DEBUG] 2018-08-30 09:49:15.439 (PrintOuts.java:48) - Converted date:+1000000000-01-01
[DEBUG] 2018-08-30 09:49:15.439 (PrintOuts.java:48) - Convert date from Payment date: 2018-07-06
[DEBUG] 2018-08-30 09:49:15.439 (ConverDates.java:75) - success: false. input: 2018-07-06 → localDate: -999999999-01-01 → formatted: 01-янв.-+1000000000 → outputImproper: 01-янв-+1000000000
[DEBUG] 2018-08-30 09:49:15.439 (ConverDates.java:84) - Send converted date +1000000000-01-01
[DEBUG] 2018-08-30 09:49:15.440 (PrintOuts.java:48) - Converted date:+1000000000-01-01
[DEBUG] 2018-08-30 09:49:15.440 (PrintOuts.java:48) - Convert date from Payment date: 2018-08-06
[DEBUG] 2018-08-30 09:49:15.440 (ConverDates.java:75) - success: false. input: 2018-08-06 → localDate: -999999999-01-01 → formatted: 01-янв.-+1000000000 → outputImproper: 01-янв-+1000000000
[DEBUG] 2018-08-30 09:49:15.440 (ConverDates.java:84) - Send converted date +1000000000-01-01
[DEBUG] 2018-08-30 09:49:15.440 (PrintOuts.java:48) - Converted date:+1000000000-01-01
[INFO ] 2018-08-30 09:49:15.440 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 09:49:15.440 (PrintOuts.java:48) - key:ClientName
[DEBUG] 2018-08-30 09:49:15.440 (PrintOuts.java:48) - value:Piotr Rasputin
[DEBUG] 2018-08-30 09:49:15.441 (PrintOuts.java:48) - Piotr Rasputin
[DEBUG] 2018-08-30 09:49:15.441 (PrintOuts.java:48) - key:Invoice Id
[DEBUG] 2018-08-30 09:49:15.441 (PrintOuts.java:48) - value:5
[DEBUG] 2018-08-30 09:49:15.441 (PrintOuts.java:48) - null
[DEBUG] 2018-08-30 09:49:15.441 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 09:49:15.441 (DataTable.java:51) - For key Invoice Id result is 5
[DEBUG] 2018-08-30 09:49:15.441 (DataTable.java:52) - Equal to
[DEBUG] 2018-08-30 09:49:15.441 (DataTable.java:53) - For key Invoice Id result is null
[INFO ] 2018-08-30 09:49:15.441 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 09:49:15.441 (InvocesTestBase.java:140) - Comparation:false
[DEBUG] 2018-08-30 09:49:15.441 (InvocesTestBase.java:141) - FromDB
[DEBUG] 2018-08-30 09:49:15.442 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Invoice Id:5|Contact ID:3|Payment amount:USD 120|Payment status:4|
ClientName:Piotr Rasputin|Invoice Id:6|Contact ID:3|Payment amount:USD 120|Payment status:5|
ClientName:Piotr Rasputin|Invoice Id:7|Contact ID:3|Payment amount:USD 120|Payment status:6|

[DEBUG] 2018-08-30 09:49:15.442 (InvocesTestBase.java:143) - FromPage
[DEBUG] 2018-08-30 09:49:15.442 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:+1000000000-01-01|Payment status:YES|Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:+1000000000-01-01|Payment status:YES|Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:+1000000000-01-01|Payment status:YES|Id:7|Contact ID:3|

[FATAL] 2018-08-30 09:49:15.442 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 09:49:15.442 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 09:49:15.443 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 09:49:17.547 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 09:49:17.625 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:13:29.172 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:13:33.139 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:13:33.140 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:13:33.233 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:13:34.385 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:13:34.524 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:13:34.525 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:13:34.525 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:13:34.757 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:13:35.633 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:13:35.633 (InvocesTestBase.java:129) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:13:35.684 (InvocesTestBase.java:129) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:13:35.721 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:13:35.729 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:13:35.816 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:13:35.837 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:13:35.846 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:13:35.855 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:13:35.855 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:13:35.875 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:13:35.882 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:13:35.882 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:13:36.882 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:13:36.909 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:13:36.916 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:13:37.235 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:13:37.236 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:13:37.237 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Invoice Id:9|Contact ID:6|Payment amount:UAH 1000|Payment status:YES|
ClientName:Marie Rogue|Invoice Id:10|Contact ID:6|Payment amount:UAH 1000|Payment status:YES|
ClientName:Marie Rogue|Invoice Id:11|Contact ID:8|Payment amount:UAH 3000|Payment status:NO|

[INFO ] 2018-08-30 10:13:37.238 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:48) - key:ClientName
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:48) - value:Marie Rogue
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:48) - Marie Rogue
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:48) - key:Invoice Id
[DEBUG] 2018-08-30 10:13:37.238 (PrintOuts.java:48) - value:9
[DEBUG] 2018-08-30 10:13:37.239 (PrintOuts.java:48) - null
[DEBUG] 2018-08-30 10:13:37.239 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:13:37.239 (DataTable.java:51) - For key Invoice Id result is 9
[DEBUG] 2018-08-30 10:13:37.239 (DataTable.java:52) - Equal to
[DEBUG] 2018-08-30 10:13:37.239 (DataTable.java:53) - For key Invoice Id result is null
[INFO ] 2018-08-30 10:13:37.239 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:13:37.239 (InvocesTestBase.java:140) - Comparation:false
[DEBUG] 2018-08-30 10:13:37.239 (InvocesTestBase.java:141) - FromDB
[DEBUG] 2018-08-30 10:13:37.239 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Invoice Id:9|Contact ID:6|Payment amount:UAH 1000|Payment status:YES|
ClientName:Marie Rogue|Invoice Id:10|Contact ID:6|Payment amount:UAH 1000|Payment status:YES|
ClientName:Marie Rogue|Invoice Id:11|Contact ID:8|Payment amount:UAH 3000|Payment status:NO|

[DEBUG] 2018-08-30 10:13:37.240 (InvocesTestBase.java:143) - FromPage
[DEBUG] 2018-08-30 10:13:37.240 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Id:9|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Id:10|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Id:11|Contact ID:8|

[FATAL] 2018-08-30 10:13:37.240 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:13:37.240 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:13:37.241 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:13:39.374 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:13:39.463 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:27:15.697 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:27:19.516 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:27:19.516 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:27:19.599 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:27:20.601 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:27:20.737 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:27:20.737 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:27:20.737 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:27:20.972 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:27:21.870 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:27:21.871 (InvocesTestBase.java:130) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment Date",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:27:21.924 (InvocesTestBase.java:130) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment Date",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:27:21.954 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:27:21.963 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:27:22.055 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:27:22.076 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:27:22.083 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:27:22.091 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:27:22.091 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:27:22.111 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:27:22.118 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:27:22.118 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:27:23.119 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:27:23.145 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:27:23.153 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:27:23.524 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:27:23.524 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 10:27:23.525 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 10:27:23.526 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - key:ClientName
[DEBUG] 2018-08-30 10:27:23.526 (PrintOuts.java:48) - value:Raven Darkhölme
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - Raven Darkhölme
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - key:Payment amount
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - value:UAH 6000
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - UAH 6000
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - key:Payment Date
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - value:2018-05-16
[DEBUG] 2018-08-30 10:27:23.527 (PrintOuts.java:48) - null
[DEBUG] 2018-08-30 10:27:23.527 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:27:23.527 (DataTable.java:51) - For key Payment Date result is 2018-05-16
[DEBUG] 2018-08-30 10:27:23.527 (DataTable.java:52) - Equal to
[DEBUG] 2018-08-30 10:27:23.527 (DataTable.java:53) - For key Payment Date result is null
[INFO ] 2018-08-30 10:27:23.528 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:27:23.528 (InvocesTestBase.java:142) - Comparation:false
[DEBUG] 2018-08-30 10:27:23.528 (InvocesTestBase.java:143) - FromDB
[DEBUG] 2018-08-30 10:27:23.528 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment Date:2018-05-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[DEBUG] 2018-08-30 10:27:23.528 (InvocesTestBase.java:145) - FromPage
[DEBUG] 2018-08-30 10:27:23.528 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[FATAL] 2018-08-30 10:27:23.528 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:27:23.528 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:27:23.529 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:27:25.663 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:27:25.732 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:40:05.672 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:40:05.675 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:40:09.594 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:40:09.594 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:40:09.690 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:40:10.792 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:40:10.948 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:40:10.950 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:40:10.950 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:40:11.198 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:40:12.056 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:40:12.056 (InvocesTestBase.java:130) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:40:12.111 (InvocesTestBase.java:130) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:40:12.144 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:40:12.151 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:40:12.241 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:40:12.261 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:40:12.269 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:40:12.277 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:40:12.277 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:40:12.298 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:40:12.305 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:40:12.305 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:40:13.306 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:40:13.329 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:40:13.337 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:40:13.707 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:40:13.707 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:40:13.708 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:40:13.709 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 10:40:13.710 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - key:ClientName
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - value:Raven Darkhölme
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - Raven Darkhölme
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - key:Payment amount
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - value:UAH 6000
[DEBUG] 2018-08-30 10:40:13.710 (PrintOuts.java:48) - UAH 6000
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - key:Payment date
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - value:2018-05-16
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - 2018-05-16
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - key:Payment status
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - value:YES
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - YES
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - key:Invoice Id
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - value:1
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - 1
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - key:Contact ID
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - value:2
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - 2
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - key:ClientName
[DEBUG] 2018-08-30 10:40:13.711 (PrintOuts.java:48) - value:Raven Darkhölme
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - Raven Darkhölme
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - key:Payment amount
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - value:UAH 6000
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - UAH 6000
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - key:Payment date
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - value:2018-05-16
[DEBUG] 2018-08-30 10:40:13.712 (PrintOuts.java:48) - 2018-06-16
[DEBUG] 2018-08-30 10:40:13.712 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:40:13.712 (DataTable.java:51) - For key Payment date result is 2018-05-16
[DEBUG] 2018-08-30 10:40:13.712 (DataTable.java:52) - Equal to
[DEBUG] 2018-08-30 10:40:13.712 (DataTable.java:53) - For key Payment date result is 2018-06-16
[INFO ] 2018-08-30 10:40:13.712 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:40:13.713 (InvocesTestBase.java:142) - Comparation:false
[DEBUG] 2018-08-30 10:40:13.713 (InvocesTestBase.java:143) - FromDB
[DEBUG] 2018-08-30 10:40:13.713 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[DEBUG] 2018-08-30 10:40:13.713 (InvocesTestBase.java:145) - FromPage
[DEBUG] 2018-08-30 10:40:13.713 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[FATAL] 2018-08-30 10:40:13.713 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:40:13.713 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:40:13.714 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:40:15.806 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:40:15.902 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:46:40.257 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:46:40.261 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:46:44.091 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:46:44.091 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:46:44.197 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:46:45.167 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:46:45.333 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:46:45.333 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:46:45.333 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:46:45.568 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:46:46.471 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:46:46.471 (InvocesTestBase.java:146) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status"
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[INFO ] 2018-08-30 10:46:46.513 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:46:46.514 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:46:48.592 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:46:48.681 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:47:28.765 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:47:28.769 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:47:32.588 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:47:32.588 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:47:32.676 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:47:33.745 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:47:33.882 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:47:33.882 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:47:33.882 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:47:34.135 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:47:35.027 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:47:35.028 (InvocesTestBase.java:146) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:47:35.081 (InvocesTestBase.java:146) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.PaymentID as "Payment status",
        
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:47:35.116 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:47:35.130 (BasePOM.java:89) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:47:35.212 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:47:35.232 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:47:35.240 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:47:35.248 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:47:35.249 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:47:35.269 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:47:35.277 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:47:35.277 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:47:36.278 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:47:36.302 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:47:36.310 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:47:36.514 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:47:36.514 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:20) - 
1:8|2:Kurt Wagner|3:4|4:EUR 105|5:2018-07-13|6:YES|

[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:47:36.515 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:47:36.516 (PrintOuts.java:48) - Convert Int from Payment status: 7
[DEBUG] 2018-08-30 10:47:36.516 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:47:36.516 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:1500|Payment amount:EUR 105|Payment date:2018-07-13|Payment status:YES|Mentor:Scott Summers|Invoice Id:8|ContractDate:2017-07-11 00:00:00|ClientName:Kurt Wagner|Payment Type:PREPAY|Type:PREPAY|Payment Date:2018-07-13| Price Currency:EUR|Consultancy:Group Development|Contract Date:2018-07-13|Contact ID:4| Price:105|status:ACTIVE|

[INFO ] 2018-08-30 10:47:36.516 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:47:36.516 (PrintOuts.java:48) - key:Employee Currency value:UAH
[DEBUG] 2018-08-30 10:47:36.516 (PrintOuts.java:48) - Compare: null
[DEBUG] 2018-08-30 10:47:36.516 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:47:36.516 (DataTable.java:51) - For key Employee Currency result is UAH
[DEBUG] 2018-08-30 10:47:36.516 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 10:47:36.517 (DataTable.java:53) - For key Employee Currency result is null
[INFO ] 2018-08-30 10:47:36.517 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:47:36.517 (InvocesTestBase.java:158) - Comparation:false
[DEBUG] 2018-08-30 10:47:36.517 (InvocesTestBase.java:159) - FromDB
[DEBUG] 2018-08-30 10:47:36.517 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:1500|Payment amount:EUR 105|Payment date:2018-07-13|Payment status:YES|Mentor:Scott Summers|Invoice Id:8|ContractDate:2017-07-11 00:00:00|ClientName:Kurt Wagner|Payment Type:PREPAY|Type:PREPAY|Payment Date:2018-07-13| Price Currency:EUR|Consultancy:Group Development|Contract Date:2018-07-13|Contact ID:4| Price:105|status:ACTIVE|

[DEBUG] 2018-08-30 10:47:36.517 (InvocesTestBase.java:161) - FromPage
[DEBUG] 2018-08-30 10:47:36.517 (PrintOuts.java:20) - 
ClientName:Kurt Wagner|Payment amount:EUR 105|Payment date:2018-07-13|Payment status:YES|Invoice Id:8|Contact ID:4|

[FATAL] 2018-08-30 10:47:36.517 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:47:36.517 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:47:36.518 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:47:38.617 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:47:38.698 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:53:00.903 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:53:00.906 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:53:04.717 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:53:04.718 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:53:04.805 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:53:05.847 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:53:06.030 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:53:06.032 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:53:06.033 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:53:06.297 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:53:07.187 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:53:07.187 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:53:07.242 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        contract.payment_date as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
contract.payment_date,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:53:07.277 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:53:07.285 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:53:07.372 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:53:07.392 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:53:07.399 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:53:07.407 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:53:07.407 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:53:07.428 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:53:07.435 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:53:07.435 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:53:08.436 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:53:08.463 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:53:08.470 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:53:08.837 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:53:08.838 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:53:08.839 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:53:08.840 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY|Payment Date:2018-05-16| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY|Payment Date:2018-05-16| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY|Payment Date:2018-05-16| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY|Payment Date:2018-05-16| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|

[INFO ] 2018-08-30 10:53:08.841 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 10:53:08.841 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - key:status value:ACTIVE
[DEBUG] 2018-08-30 10:53:08.842 (PrintOuts.java:48) - Compare: null
[DEBUG] 2018-08-30 10:53:08.842 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:53:08.842 (DataTable.java:51) - For key status result is ACTIVE
[DEBUG] 2018-08-30 10:53:08.842 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 10:53:08.842 (DataTable.java:53) - For key status result is null
[INFO ] 2018-08-30 10:53:08.843 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:53:08.843 (InvocesTestBase.java:151) - Comparation:false
[DEBUG] 2018-08-30 10:53:08.843 (InvocesTestBase.java:152) - FromDB
[DEBUG] 2018-08-30 10:53:08.843 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|

[DEBUG] 2018-08-30 10:53:08.843 (InvocesTestBase.java:154) - FromPage
[DEBUG] 2018-08-30 10:53:08.843 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[FATAL] 2018-08-30 10:53:08.843 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:53:08.843 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:53:08.844 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:53:10.964 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:53:11.034 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:55:59.702 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:55:59.705 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:56:03.523 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:56:03.523 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:56:03.613 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:56:04.617 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:56:04.752 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:56:04.752 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:56:04.752 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:56:04.987 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:56:05.851 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:56:05.852 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        contract.payment_date as "Payment Date",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[INFO ] 2018-08-30 10:56:05.896 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:56:05.896 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:56:07.990 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:56:08.087 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:57:03.541 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:57:03.544 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:57:07.364 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:57:07.365 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:57:07.454 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:57:08.394 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:57:09.727 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:57:09.728 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:57:09.728 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:57:09.961 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:57:10.847 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:57:10.848 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:57:10.909 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:57:10.941 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:57:10.949 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:57:11.041 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:57:11.061 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:57:11.068 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:57:11.076 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:57:11.076 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:57:11.096 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:57:11.104 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:57:11.104 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:57:12.104 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:57:12.128 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:57:12.136 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:57:12.506 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:57:12.506 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:57:12.506 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:57:12.506 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 10:57:12.507 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 10:57:12.508 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|
Employee Currency:UAH|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|status:ACTIVE|

[INFO ] 2018-08-30 10:57:12.509 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 10:57:12.509 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - key:status value:ACTIVE
[DEBUG] 2018-08-30 10:57:12.510 (PrintOuts.java:48) - Compare: null
[DEBUG] 2018-08-30 10:57:12.511 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:57:12.511 (DataTable.java:51) - For key status result is ACTIVE
[DEBUG] 2018-08-30 10:57:12.511 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 10:57:12.511 (DataTable.java:53) - For key status result is null
[INFO ] 2018-08-30 10:57:12.511 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:57:12.511 (InvocesTestBase.java:151) - Comparation:false
[DEBUG] 2018-08-30 10:57:12.511 (InvocesTestBase.java:152) - FromDB
[DEBUG] 2018-08-30 10:57:12.511 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|
Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|status:ACTIVE|

[DEBUG] 2018-08-30 10:57:12.512 (InvocesTestBase.java:154) - FromPage
[DEBUG] 2018-08-30 10:57:12.512 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[FATAL] 2018-08-30 10:57:12.512 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:57:12.512 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:57:12.513 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:57:14.636 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:57:14.706 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 10:58:35.748 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 10:58:35.752 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 10:58:39.665 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 10:58:39.665 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 10:58:39.758 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 10:58:40.752 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 10:58:40.889 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 10:58:40.889 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:58:40.889 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 10:58:41.127 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 10:58:42.017 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 10:58:42.017 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 10:58:42.074 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 10:58:42.112 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:58:42.121 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 10:58:42.210 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:58:42.231 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:58:42.238 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 10:58:42.246 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 10:58:42.247 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 10:58:42.267 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 10:58:42.275 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 10:58:42.275 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 10:58:43.275 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 10:58:43.298 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 10:58:43.305 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 10:58:43.618 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 10:58:43.619 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 10:58:43.620 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|status:FROZEN|
Employee Currency:UAH|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|status:FROZEN|
Employee Currency:UAH|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|status:ACTIVE|

[INFO ] 2018-08-30 10:58:43.621 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 10:58:43.621 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 10:58:43.622 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 10:58:43.622 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-30 10:58:43.622 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 10:58:43.622 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-30 10:58:43.622 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 10:58:43.622 (InvocesTestBase.java:151) - Comparation:false
[DEBUG] 2018-08-30 10:58:43.622 (InvocesTestBase.java:152) - FromDB
[DEBUG] 2018-08-30 10:58:43.622 (PrintOuts.java:20) - 
Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Invoice Id:9|ClientName:Marie Rogue|Contact ID:6|status:FROZEN|
Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Invoice Id:10|ClientName:Marie Rogue|Contact ID:6|status:FROZEN|
Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Invoice Id:11|ClientName:Marie Rogue|Contact ID:8|status:ACTIVE|

[DEBUG] 2018-08-30 10:58:43.622 (InvocesTestBase.java:154) - FromPage
[DEBUG] 2018-08-30 10:58:43.622 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Invoice Id:9|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Invoice Id:10|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Invoice Id:11|Contact ID:8|

[FATAL] 2018-08-30 10:58:43.622 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 10:58:43.623 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 10:58:43.623 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 10:58:45.756 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 10:58:45.845 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:01:37.925 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:01:37.929 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:01:41.770 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:01:41.771 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:01:41.861 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:01:42.859 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:01:42.998 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:01:42.998 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:01:42.999 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:01:43.234 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:01:44.233 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:01:44.233 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[INFO ] 2018-08-30 11:01:44.277 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:01:44.277 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:01:46.372 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:01:46.466 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:02:06.704 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:02:06.708 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:02:10.542 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:02:10.542 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:02:10.628 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:02:11.651 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:02:11.794 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:02:11.795 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:02:11.795 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:02:12.029 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:02:12.856 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:02:12.856 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:02:12.914 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as Status
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:02:12.947 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:02:12.956 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:02:13.041 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:02:13.061 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:02:13.071 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:02:13.079 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:02:13.079 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:02:13.100 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:02:13.106 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:02:13.106 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:02:14.107 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:02:14.133 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:02:14.141 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:02:14.456 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:02:14.456 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:02:14.457 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:20) - 
Employee Currency:UAH|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|status:FROZEN|
Employee Currency:UAH|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|status:FROZEN|
Employee Currency:UAH|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|status:ACTIVE|

[INFO ] 2018-08-30 11:02:14.458 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 11:02:14.458 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:Payment date value:2018-06-07
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:Invoice Id value:9
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - Compare: 9
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:ClientName value:Marie Rogue
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - Compare: Marie Rogue
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:Contact ID value:6
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-30 11:02:14.459 (PrintOuts.java:48) - key:status value:FROZEN
[DEBUG] 2018-08-30 11:02:14.460 (PrintOuts.java:48) - Compare: null
[DEBUG] 2018-08-30 11:02:14.460 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:02:14.460 (DataTable.java:51) - For key status result is FROZEN
[DEBUG] 2018-08-30 11:02:14.460 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:02:14.460 (DataTable.java:53) - For key status result is null
[INFO ] 2018-08-30 11:02:14.460 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:02:14.460 (InvocesTestBase.java:151) - Comparation:false
[DEBUG] 2018-08-30 11:02:14.460 (InvocesTestBase.java:152) - FromDB
[DEBUG] 2018-08-30 11:02:14.460 (PrintOuts.java:20) - 
Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Invoice Id:9|ClientName:Marie Rogue|Contact ID:6|status:FROZEN|
Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Invoice Id:10|ClientName:Marie Rogue|Contact ID:6|status:FROZEN|
Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Invoice Id:11|ClientName:Marie Rogue|Contact ID:8|status:ACTIVE|

[DEBUG] 2018-08-30 11:02:14.461 (InvocesTestBase.java:154) - FromPage
[DEBUG] 2018-08-30 11:02:14.461 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Invoice Id:9|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Invoice Id:10|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Invoice Id:11|Contact ID:8|

[FATAL] 2018-08-30 11:02:14.461 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:02:14.461 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:02:14.462 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:02:16.561 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:02:16.652 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:03:16.773 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:03:16.777 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:03:20.521 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:03:20.521 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:03:20.609 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:03:21.640 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:03:21.791 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:03:21.791 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:03:21.792 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:03:22.028 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:03:22.912 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:03:22.912 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:03:22.971 (InvocesTestBase.java:144) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:03:23.005 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:03:23.014 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:03:23.099 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:03:23.120 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:03:23.128 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:03:23.136 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:03:23.136 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:03:23.157 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:03:23.164 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:03:23.164 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:03:24.164 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:03:24.189 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:03:24.196 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:03:24.563 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:03:24.563 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:03:24.564 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-04-17|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-17|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-17|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-17|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:03:24.565 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:03:24.565 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:03:24.566 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:03:24.566 (PrintOuts.java:48) - key:Payment date value:2018-04-17
[DEBUG] 2018-08-30 11:03:24.566 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:03:24.566 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:03:24.566 (DataTable.java:51) - For key Payment date result is 2018-04-17
[DEBUG] 2018-08-30 11:03:24.566 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:03:24.566 (DataTable.java:53) - For key Payment date result is 2018-05-16
[INFO ] 2018-08-30 11:03:24.566 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:03:24.566 (InvocesTestBase.java:151) - Comparation:false
[DEBUG] 2018-08-30 11:03:24.566 (InvocesTestBase.java:152) - FromDB
[DEBUG] 2018-08-30 11:03:24.567 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-04-17|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-05-17|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-06-17|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-07-17|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|

[DEBUG] 2018-08-30 11:03:24.567 (InvocesTestBase.java:154) - FromPage
[DEBUG] 2018-08-30 11:03:24.567 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[FATAL] 2018-08-30 11:03:24.567 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:03:24.567 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:03:24.568 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:03:26.711 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:03:26.781 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:12:38.080 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:12:38.084 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:12:42.018 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:12:42.018 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:12:42.120 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:12:43.087 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:12:43.238 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:12:43.239 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:12:43.239 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:12:43.475 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:12:44.358 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:12:44.359 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:12:44.412 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_from as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:12:44.447 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:12:44.454 (BasePOM.java:89) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:12:44.545 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:12:44.566 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:12:44.574 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:12:44.582 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:12:44.582 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:12:44.603 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:12:44.610 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:12:44.610 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:12:45.611 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:12:45.654 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:12:45.662 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:12:45.977 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:12:45.977 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:12:45.977 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:12:45.977 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:12:45.977 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:12:45.978 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-30 11:12:45.979 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:12:45.980 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-05-07|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-07|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-07|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-30 11:12:45.980 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:12:45.980 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:12:45.980 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:12:45.980 (PrintOuts.java:48) - key:Payment date value:2018-05-07
[DEBUG] 2018-08-30 11:12:45.980 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-30 11:12:45.980 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:12:45.981 (DataTable.java:51) - For key Payment date result is 2018-05-07
[DEBUG] 2018-08-30 11:12:45.981 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:12:45.981 (DataTable.java:53) - For key Payment date result is 2018-06-06
[INFO ] 2018-08-30 11:12:45.981 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:12:45.981 (InvocesTestBase.java:154) - Comparation:false
[DEBUG] 2018-08-30 11:12:45.981 (InvocesTestBase.java:155) - FromDB
[DEBUG] 2018-08-30 11:12:45.981 (PrintOuts.java:20) - 
Payment amount:USD 120|Payment date:2018-05-07|Payment status:YES|Invoice Id:5|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-06-07|Payment status:YES|Invoice Id:6|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-07-07|Payment status:YES|Invoice Id:7|ClientName:Piotr Rasputin|Contact ID:3|

[DEBUG] 2018-08-30 11:12:45.981 (InvocesTestBase.java:157) - FromPage
[DEBUG] 2018-08-30 11:12:45.981 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|Contact ID:3|

[FATAL] 2018-08-30 11:12:45.981 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:12:45.982 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:12:45.982 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:12:48.118 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:12:48.187 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:14:20.427 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:14:20.432 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:14:25.348 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:14:25.349 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:14:25.436 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:14:26.411 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:14:26.545 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:14:26.546 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:14:26.546 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:14:26.781 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:14:27.696 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:14:27.697 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:14:27.763 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:14:27.804 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:14:27.814 (BasePOM.java:89) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:14:27.905 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:14:27.925 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:14:27.940 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:14:27.951 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:14:27.951 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:14:27.971 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:14:27.981 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:14:27.981 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:14:28.982 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:14:29.011 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:14:29.018 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:14:29.338 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:14:29.338 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:14:29.338 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:14:29.338 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:14:29.338 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 11:14:29.339 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:29.340 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-30 11:14:29.341 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - key:Payment date value:2018-06-06
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - key:Invoice Id value:5
[DEBUG] 2018-08-30 11:14:29.341 (PrintOuts.java:48) - Compare: 5
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: 2018-07-06
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:Invoice Id value:6
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-30 11:14:29.342 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:Payment date value:2018-08-06
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: 2018-08-06
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:Invoice Id value:7
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: 7
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.343 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:14:29.344 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:14:29.344 (PrintOuts.java:48) - Compare: 3
[INFO ] 2018-08-30 11:14:29.344 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:14:29.344 (InvocesTestBase.java:154) - Comparation:true
[DEBUG] 2018-08-30 11:14:29.344 (InvocesTestBase.java:155) - FromDB
[DEBUG] 2018-08-30 11:14:29.344 (PrintOuts.java:20) - 
Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|ClientName:Piotr Rasputin|Contact ID:3|

[DEBUG] 2018-08-30 11:14:29.344 (InvocesTestBase.java:157) - FromPage
[DEBUG] 2018-08-30 11:14:29.344 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|Contact ID:3|

[INFO ] 2018-08-30 11:14:29.344 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:14:29.345 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:14:31.466 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:14:31.552 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:14:38.790 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:14:38.794 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:14:42.541 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:14:42.541 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:14:42.629 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:14:43.716 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:14:43.846 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:14:43.847 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:14:43.847 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:14:44.081 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:14:44.982 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:14:44.983 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:14:45.032 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:14:45.065 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:14:45.072 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:14:45.157 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:14:45.177 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:14:45.189 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:14:45.201 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:14:45.201 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:14:45.221 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:14:45.229 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:14:45.230 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:14:46.231 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:14:46.287 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:14:46.294 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:14:46.669 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:14:46.669 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:14:46.670 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:14:46.671 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:14:46.672 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 11:14:46.672 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:14:46.673 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:14:46.674 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.675 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:14:46.676 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:14:46.676 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 11:14:46.676 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:14:46.676 (InvocesTestBase.java:154) - Comparation:true
[DEBUG] 2018-08-30 11:14:46.676 (InvocesTestBase.java:155) - FromDB
[DEBUG] 2018-08-30 11:14:46.676 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|

[DEBUG] 2018-08-30 11:14:46.676 (InvocesTestBase.java:157) - FromPage
[DEBUG] 2018-08-30 11:14:46.676 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 11:14:46.676 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:14:46.677 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:14:48.805 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:14:48.883 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:14:54.926 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:14:54.931 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:14:58.698 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:14:58.698 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:14:58.787 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:14:59.892 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:15:00.039 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:15:00.039 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:15:00.040 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:15:00.283 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:15:01.078 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:15:01.079 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:15:01.150 (InvocesTestBase.java:147) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:15:01.189 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:15:01.198 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:15:01.288 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:15:01.308 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:15:01.316 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:15:01.324 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:15:01.324 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:15:01.345 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:15:01.352 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:15:01.352 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:15:02.353 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:15:02.392 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:15:02.400 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:15:02.716 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:15:02.716 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 11:15:02.717 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|Payment date From:2018-08-19|Payment date To:2018-09-18|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|

[INFO ] 2018-08-30 11:15:02.718 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:15:02.718 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 11:15:02.718 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:15:02.718 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-30 11:15:02.719 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:15:02.719 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-30 11:15:02.719 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:15:02.719 (InvocesTestBase.java:154) - Comparation:false
[DEBUG] 2018-08-30 11:15:02.719 (InvocesTestBase.java:155) - FromDB
[DEBUG] 2018-08-30 11:15:02.719 (PrintOuts.java:20) - 
Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Invoice Id:9|ClientName:Marie Rogue|Contact ID:6|
Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Invoice Id:10|ClientName:Marie Rogue|Contact ID:6|
Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Invoice Id:11|ClientName:Marie Rogue|Contact ID:8|

[DEBUG] 2018-08-30 11:15:02.719 (InvocesTestBase.java:157) - FromPage
[DEBUG] 2018-08-30 11:15:02.719 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Invoice Id:9|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Invoice Id:10|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Invoice Id:11|Contact ID:8|

[FATAL] 2018-08-30 11:15:02.720 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:15:02.720 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:15:02.720 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:15:04.814 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:15:04.884 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:33:15.250 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:33:15.250 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:33:19.220 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:33:19.220 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:33:19.320 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:33:20.310 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:33:20.447 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:33:20.447 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:20.447 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:33:20.685 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:21.694 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:33:21.694 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:33:21.747 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:33:21.779 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:21.787 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:33:21.874 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:21.896 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:21.906 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:33:21.915 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:33:21.915 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:21.935 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:21.945 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:33:21.945 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:33:22.946 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:33:22.972 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:22.980 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:33:23.356 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:33:23.356 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:33:23.356 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:33:23.357 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:33:23.358 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:33:23.359 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 11:33:23.359 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:33:23.360 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.361 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.362 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:33:23.363 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:33:23.363 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 11:33:23.363 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:33:23.363 (InvocesTestBase.java:156) - Comparation:true
[DEBUG] 2018-08-30 11:33:23.363 (InvocesTestBase.java:157) - FromDB
[DEBUG] 2018-08-30 11:33:23.363 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|

[DEBUG] 2018-08-30 11:33:23.363 (InvocesTestBase.java:159) - FromPage
[DEBUG] 2018-08-30 11:33:23.363 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 11:33:23.363 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:33:23.364 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:33:25.484 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:33:25.555 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:33:31.271 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:33:31.271 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:33:35.070 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:33:35.070 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:33:35.153 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:33:36.098 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:33:36.232 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:33:36.233 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:36.233 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:33:36.466 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:37.366 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:33:37.367 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:33:37.419 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:33:37.452 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:37.461 (BasePOM.java:89) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:33:37.550 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:37.570 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:37.579 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:33:37.586 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:33:37.586 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:37.608 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:37.615 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:33:37.615 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:33:38.615 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:33:38.638 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:38.646 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:33:38.960 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:33:38.960 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:33:38.960 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 11:33:38.961 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:38.962 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-30 11:33:38.962 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:Payment date value:2018-06-06
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:Invoice Id value:5
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - Compare: 5
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.963 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: 2018-07-06
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:Invoice Id value:6
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:33:38.964 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:Payment date value:2018-08-06
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: 2018-08-06
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:Invoice Id value:7
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: 7
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:33:38.965 (PrintOuts.java:48) - Compare: 3
[INFO ] 2018-08-30 11:33:38.966 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:33:38.966 (InvocesTestBase.java:156) - Comparation:true
[DEBUG] 2018-08-30 11:33:38.966 (InvocesTestBase.java:157) - FromDB
[DEBUG] 2018-08-30 11:33:38.966 (PrintOuts.java:20) - 
Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|ClientName:Piotr Rasputin|Contact ID:3|

[DEBUG] 2018-08-30 11:33:38.966 (InvocesTestBase.java:159) - FromPage
[DEBUG] 2018-08-30 11:33:38.966 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|Contact ID:3|

[INFO ] 2018-08-30 11:33:38.967 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:33:38.967 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:33:41.070 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:33:41.168 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:33:41.828 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:33:41.828 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:33:45.817 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:33:45.817 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:33:45.902 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:33:46.954 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:33:47.091 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:33:47.091 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:47.091 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:33:47.325 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:33:48.203 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:33:48.204 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:33:48.255 (InvocesTestBase.java:149) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:33:48.288 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:48.310 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:33:48.398 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:48.419 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:48.427 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:33:48.434 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:33:48.435 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:33:48.455 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:33:48.464 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:33:48.464 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:33:49.465 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:33:49.523 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:33:49.531 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:33:49.848 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:33:49.848 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:33:49.848 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:33:49.848 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:33:49.848 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 11:33:49.849 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:33:49.850 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|Payment date From:2018-08-19|Payment date To:2018-09-18|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|

[INFO ] 2018-08-30 11:33:49.851 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:33:49.851 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 11:33:49.851 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 11:33:49.851 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:33:49.851 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 11:33:49.851 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:33:49.851 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-30 11:33:49.851 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:33:49.851 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-30 11:33:49.852 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:33:49.852 (InvocesTestBase.java:156) - Comparation:false
[DEBUG] 2018-08-30 11:33:49.852 (InvocesTestBase.java:157) - FromDB
[DEBUG] 2018-08-30 11:33:49.852 (PrintOuts.java:20) - 
Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Invoice Id:9|ClientName:Marie Rogue|Contact ID:6|
Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Invoice Id:10|ClientName:Marie Rogue|Contact ID:6|
Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Invoice Id:11|ClientName:Marie Rogue|Contact ID:8|

[DEBUG] 2018-08-30 11:33:49.852 (InvocesTestBase.java:159) - FromPage
[DEBUG] 2018-08-30 11:33:49.852 (PrintOuts.java:20) - 
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-06-07|Payment status:YES|Invoice Id:9|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 1000|Payment date:2018-07-07|Payment status:YES|Invoice Id:10|Contact ID:6|
ClientName:Marie Rogue|Payment amount:UAH 3000|Payment date:2018-08-19|Payment status:NO|Invoice Id:11|Contact ID:8|

[FATAL] 2018-08-30 11:33:49.852 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:33:49.852 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:33:49.853 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:33:51.966 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:33:52.056 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:36:00.405 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:36:00.421 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:36:04.230 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:36:04.230 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:36:04.315 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:36:05.294 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:36:05.429 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:36:05.429 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:36:05.429 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:36:05.669 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:36:06.598 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:36:06.599 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:36:06.652 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:36:06.683 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:36:06.692 (BasePOM.java:89) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:36:06.776 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:36:06.797 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:36:06.805 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:36:06.816 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:36:06.816 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:36:06.836 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:36:06.845 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:36:06.845 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:36:07.846 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:36:07.896 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:36:07.903 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:36:08.107 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:36:08.107 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:36:08.107 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:36:08.107 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:36:08.108 (PrintOuts.java:20) - 
1:8|2:Kurt Wagner|3:4|4:EUR 105|5:2018-07-13|6:YES|

[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Convert Int from Payment status: 7
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:EUR 105|Payment date:2018-08-12|Payment status:YES|Mentor:Scott Summers|Invoice Id:8|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-13|Payment date To:2018-08-12|ClientName:Kurt Wagner|Payment Type:PREPAY|Type:PREPAY| Price Currency:EUR|Consultancy:Group Development|Contract Date:2018-07-13|Contact ID:4| Price:105|

[INFO ] 2018-08-30 11:36:08.109 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - key:Payment amount value:EUR 105
[DEBUG] 2018-08-30 11:36:08.109 (PrintOuts.java:48) - Compare: EUR 105
[DEBUG] 2018-08-30 11:36:08.110 (PrintOuts.java:48) - key:Payment date value:2018-08-12
[DEBUG] 2018-08-30 11:36:08.110 (PrintOuts.java:48) - Compare: 2018-07-13
[DEBUG] 2018-08-30 11:36:08.110 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:36:08.110 (DataTable.java:51) - For key Payment date result is 2018-08-12
[DEBUG] 2018-08-30 11:36:08.110 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:36:08.110 (DataTable.java:53) - For key Payment date result is 2018-07-13
[INFO ] 2018-08-30 11:36:08.110 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:36:08.111 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:36:10.218 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:36:10.299 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:37:32.346 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:37:32.346 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:37:36.159 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:37:36.159 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:37:36.244 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:37:37.513 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:37:37.646 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:37:37.647 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:37:37.647 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:37:37.881 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:37:38.790 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:37:38.790 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:37:38.845 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:37:38.877 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:37:38.884 (BasePOM.java:89) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:37:38.967 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:37:38.987 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:37:39.013 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:37:39.026 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:37:39.026 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:37:39.046 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:37:39.054 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:37:39.054 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:37:40.054 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:37:40.077 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:37:40.084 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:37:40.292 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:37:40.292 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:37:40.292 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:37:40.292 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:37:40.292 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:20) - 
1:8|2:Kurt Wagner|3:4|4:EUR 105|5:2018-07-13|6:YES|

[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:37:40.293 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - Convert Int from Payment status: 7
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:EUR 105|Payment date:2018-08-12|Payment status:YES|Mentor:Scott Summers|Invoice Id:8|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-13|Payment date To:2018-08-12|ClientName:Kurt Wagner|Payment Type:PREPAY|Type:PREPAY| Price Currency:EUR|Consultancy:Group Development|Contract Date:2018-07-13|Contact ID:4| Price:105|

[INFO ] 2018-08-30 11:37:40.294 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - key:Payment amount value:EUR 105
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - Compare: EUR 105
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - key:Payment date value:2018-08-12
[DEBUG] 2018-08-30 11:37:40.294 (PrintOuts.java:48) - Compare: 2018-07-13
[DEBUG] 2018-08-30 11:37:40.294 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:37:40.295 (DataTable.java:51) - For key Payment date result is 2018-08-12
[DEBUG] 2018-08-30 11:37:40.295 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:37:40.295 (DataTable.java:53) - For key Payment date result is 2018-07-13
[INFO ] 2018-08-30 11:37:40.295 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : false
[DEBUG] 2018-08-30 11:37:40.295 (InvocesTestBase.java:157) - Comparation:false
[DEBUG] 2018-08-30 11:37:40.295 (InvocesTestBase.java:158) - FromDB
[DEBUG] 2018-08-30 11:37:40.295 (PrintOuts.java:20) - 
Payment amount:EUR 105|Payment date:2018-08-12|Payment status:YES|Invoice Id:8|ClientName:Kurt Wagner|Contact ID:4|

[DEBUG] 2018-08-30 11:37:40.295 (InvocesTestBase.java:160) - FromPage
[DEBUG] 2018-08-30 11:37:40.295 (PrintOuts.java:20) - 
ClientName:Kurt Wagner|Payment amount:EUR 105|Payment date:2018-07-13|Payment status:YES|Invoice Id:8|Contact ID:4|

[FATAL] 2018-08-30 11:37:40.296 (InvoicesAllClientDataDbVsSiteTest.java:26) - Data is not equal
[INFO ] 2018-08-30 11:37:40.296 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:37:40.297 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:37:42.382 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:37:42.454 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:38:12.330 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:38:12.330 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:38:16.113 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:38:16.113 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:38:16.211 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:38:17.175 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:38:17.316 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:38:17.316 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:17.316 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:38:17.553 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:18.439 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:38:18.439 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:38:18.490 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:38:18.522 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:18.532 (BasePOM.java:89) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:38:18.620 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:18.641 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:18.648 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:38:18.656 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:38:18.656 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:18.678 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:18.685 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:38:18.685 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:38:19.686 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:38:19.743 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:19.751 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:38:20.068 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:38:20.068 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:38:20.068 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:38:20.068 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:38:20.068 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:38:20.068 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:38:20.069 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-30 11:38:20.070 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:38:20.070 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:Payment date value:2018-06-06
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:Invoice Id value:5
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: 5
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:38:20.071 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: 2018-07-06
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Invoice Id value:6
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:38:20.072 (PrintOuts.java:48) - key:Payment date value:2018-08-06
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - Compare: 2018-08-06
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - key:Invoice Id value:7
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - Compare: 7
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:38:20.073 (PrintOuts.java:48) - Compare: 3
[INFO ] 2018-08-30 11:38:20.073 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:38:20.073 (InvocesTestBase.java:157) - Comparation:true
[DEBUG] 2018-08-30 11:38:20.074 (InvocesTestBase.java:158) - FromDB
[DEBUG] 2018-08-30 11:38:20.074 (PrintOuts.java:20) - 
Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|ClientName:Piotr Rasputin|Contact ID:3|

[DEBUG] 2018-08-30 11:38:20.074 (InvocesTestBase.java:160) - FromPage
[DEBUG] 2018-08-30 11:38:20.074 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|Contact ID:3|

[INFO ] 2018-08-30 11:38:20.074 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:38:20.075 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:38:22.181 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:38:22.258 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:38:24.574 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:38:24.591 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:38:28.463 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:38:28.463 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:38:28.563 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:38:29.596 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:38:29.733 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:38:29.733 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:29.734 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:38:29.969 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:30.842 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:38:30.843 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:38:30.895 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:38:30.928 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:30.938 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:38:31.030 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:31.050 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:31.058 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:38:31.066 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:38:31.067 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:31.087 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:31.094 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:38:31.095 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:38:32.096 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:38:32.133 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:32.140 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:38:32.513 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:38:32.513 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:38:32.514 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:32.515 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:38:32.516 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:38:32.516 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:38:32.516 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:38:32.516 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 11:38:32.517 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 11:38:32.518 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:38:32.519 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.520 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 11:38:32.521 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:38:32.522 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 11:38:32.522 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:38:32.522 (InvocesTestBase.java:157) - Comparation:true
[DEBUG] 2018-08-30 11:38:32.523 (InvocesTestBase.java:158) - FromDB
[DEBUG] 2018-08-30 11:38:32.523 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|

[DEBUG] 2018-08-30 11:38:32.523 (InvocesTestBase.java:160) - FromPage
[DEBUG] 2018-08-30 11:38:32.523 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 11:38:32.523 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:38:32.524 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:38:34.640 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:38:34.736 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:38:36.686 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:38:36.686 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:38:41.618 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:38:41.618 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:38:41.695 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:38:42.763 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:38:42.915 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:38:42.915 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:42.915 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:38:43.149 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:38:44.029 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:38:44.029 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:38:44.102 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:38:44.138 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:44.147 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:38:44.234 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:44.255 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:44.268 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:38:44.276 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:38:44.276 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:38:44.297 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:38:44.305 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:38:44.305 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:38:45.306 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:38:45.330 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:38:45.337 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:38:45.651 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:38:45.651 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:38:45.652 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:38:45.653 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|Payment date From:2018-08-19|Payment date To:2018-09-18|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|

[INFO ] 2018-08-30 11:38:45.654 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:38:45.654 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 11:38:45.654 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:38:45.655 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-30 11:38:45.655 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:38:45.655 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-30 11:38:45.655 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:38:45.656 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:38:47.768 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:38:47.847 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:45:52.150 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:45:52.154 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:45:55.928 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:45:55.928 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:45:56.018 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:45:56.966 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:45:57.106 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:45:57.106 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:45:57.106 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:45:57.341 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:45:58.222 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:45:58.222 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:45:58.273 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:45:58.307 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:45:58.315 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:45:58.403 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:45:58.423 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:45:58.430 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:45:58.439 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:45:58.439 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:45:58.460 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:45:58.470 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:45:58.470 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:45:59.470 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:45:59.505 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:45:59.512 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:45:59.884 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:45:59.884 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:45:59.884 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:45:59.884 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:45:59.884 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:45:59.884 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:45:59.885 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:45:59.886 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:45:59.887 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 11:45:59.887 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.888 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.889 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:45:59.890 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:45:59.891 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 11:45:59.891 (InvoicesAllClientDataDbVsSiteTest.java:22) - Tables equals? : true
[DEBUG] 2018-08-30 11:45:59.900 (InvocesTestBase.java:157) - Comparation:true
[DEBUG] 2018-08-30 11:45:59.901 (InvocesTestBase.java:158) - FromDB
[DEBUG] 2018-08-30 11:45:59.901 (PrintOuts.java:20) - 
Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|ClientName:Raven Darkhölme|Contact ID:2|
Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|ClientName:Raven Darkhölme|Contact ID:2|

[DEBUG] 2018-08-30 11:45:59.901 (InvocesTestBase.java:160) - FromPage
[DEBUG] 2018-08-30 11:45:59.901 (PrintOuts.java:20) - 
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Invoice Id:1|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Invoice Id:2|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Invoice Id:3|Contact ID:2|
ClientName:Raven Darkhölme|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Invoice Id:4|Contact ID:2|

[INFO ] 2018-08-30 11:45:59.901 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:45:59.902 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:46:02.026 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:46:02.101 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:48:40.425 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:48:40.429 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:48:44.257 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:48:44.258 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:48:44.347 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:48:45.311 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:48:45.447 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:48:45.448 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:48:45.448 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:48:45.683 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:48:46.608 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:48:46.608 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:48:46.661 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:48:46.693 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:48:46.700 (BasePOM.java:89) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:48:46.783 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:48:46.804 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:48:46.825 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:48:46.837 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:48:46.837 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:48:46.858 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:48:46.865 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:48:46.865 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:48:47.866 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:48:47.891 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:48:47.900 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:48:48.230 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:48:48.230 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:48:48.230 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:48:48.230 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:48:48.230 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:48:48.230 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:48:48.231 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:48:48.232 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|Payment date From:2018-08-19|Payment date To:2018-09-18|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|

[INFO ] 2018-08-30 11:48:48.233 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:48:48.233 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-30 11:48:48.233 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-30 11:48:48.233 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:48:48.233 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-30 11:48:48.233 (DataTable.java:50) - Original
[DEBUG] 2018-08-30 11:48:48.234 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-30 11:48:48.234 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-30 11:48:48.234 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-30 11:48:48.234 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:48:48.235 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:48:50.328 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:48:50.395 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 11:49:32.656 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:49:32.660 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:49:37.554 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:49:37.554 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:49:37.639 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:49:38.630 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:49:38.793 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:49:38.795 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:49:38.795 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:49:39.041 (BasePOM.java:146) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:49:39.939 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:49:39.940 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:49:39.992 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:49:40.027 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:49:40.036 (BasePOM.java:89) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:49:40.124 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:49:40.144 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:49:40.151 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:49:40.159 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:49:40.159 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:49:40.179 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:49:40.186 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:49:40.186 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:49:41.187 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:49:41.209 (BasePOM.java:146) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:49:41.217 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:49:41.592 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:49:41.592 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:49:41.592 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:49:41.593 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:49:41.594 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 11:49:41.595 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:49:41.595 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 11:49:41.596 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 11:49:41.597 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 11:49:41.598 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 11:49:41.599 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 11:49:41.599 (BasePOM.java:125) - Wait For By.xpath: .//a[contains(text(),'ClientName')]
[DEBUG] 2018-08-30 11:49:41.600 (BasePOM.java:146) - Wait For By.xpath: .//a[contains(text(),'ClientName')]
[INFO ] 2018-08-30 11:52:51.108 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:52:51.109 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:55:55.844 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 11:55:55.848 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 11:56:00.774 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 11:56:00.774 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 11:56:00.864 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 11:56:01.816 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 11:56:01.978 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 11:56:01.978 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:56:01.978 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 11:56:02.212 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 11:56:03.256 (InvoicesAllClientDataDbVsSiteTest.java:12) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 11:56:03.256 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 11:56:03.312 (InvocesTestBase.java:150) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 11:56:03.345 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:56:03.354 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 11:56:03.446 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:56:03.466 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:56:03.475 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 11:56:03.483 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 11:56:03.484 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 11:56:03.504 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 11:56:03.512 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 11:56:03.512 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 11:56:04.512 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 11:56:04.534 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 11:56:04.542 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 11:56:04.868 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 11:56:04.868 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 11:56:04.869 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-30 11:56:04.870 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 11:56:04.870 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - key:Payment date value:2018-06-06
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - key:Invoice Id value:5
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - Compare: 5
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.871 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: 2018-07-06
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:Invoice Id value:6
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.872 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Payment date value:2018-08-06
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: 2018-08-06
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Invoice Id value:7
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: 7
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-30 11:56:04.873 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-30 11:56:04.874 (PrintOuts.java:48) - Compare: 3
[INFO ] 2018-08-30 11:56:04.874 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-30 11:56:04.874 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-30 11:56:05.751 (InvoicesAllClientDataDbVsSiteTest.java:24) - Tables equals? : true
[DEBUG] 2018-08-30 11:56:05.751 (InvocesTestBase.java:157) - Comparation:true
[DEBUG] 2018-08-30 11:56:05.751 (InvocesTestBase.java:158) - FromDB
[DEBUG] 2018-08-30 11:56:05.751 (PrintOuts.java:20) - 
Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|ClientName:Piotr Rasputin|Contact ID:3|
Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|ClientName:Piotr Rasputin|Contact ID:3|

[DEBUG] 2018-08-30 11:56:05.751 (InvocesTestBase.java:160) - FromPage
[DEBUG] 2018-08-30 11:56:05.751 (PrintOuts.java:20) - 
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Invoice Id:5|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Invoice Id:6|Contact ID:3|
ClientName:Piotr Rasputin|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Invoice Id:7|Contact ID:3|

[INFO ] 2018-08-30 11:56:05.752 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 11:56:05.752 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 11:56:07.862 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 11:56:07.962 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-30 12:42:56.121 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-30 12:42:56.121 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-30 12:43:00.288 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-30 12:43:00.288 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-30 12:43:00.372 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-30 12:43:01.408 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-30 12:43:01.564 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-30 12:43:01.564 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 12:43:01.565 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-30 12:43:01.816 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-30 12:43:02.701 (InvoicesAllClientDataDbVsSiteTest.java:21) - Get into Testtests.invoces.InvoicesAllClientDataDbVsSiteTest
[DEBUG] 2018-08-30 12:43:02.701 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-30 12:43:02.753 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-30 12:43:02.785 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 12:43:02.793 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-30 12:43:02.878 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 12:43:02.899 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 12:43:02.906 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-30 12:43:02.914 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-30 12:43:02.914 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-30 12:43:02.935 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-30 12:43:02.942 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-30 12:43:02.943 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-30 12:43:03.943 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-30 12:43:03.967 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-30 12:43:03.974 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-30 12:43:04.350 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-30 12:43:04.350 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-30 12:43:04.351 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-30 12:43:04.352 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-30 12:43:04.352 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 12:43:04.353 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 12:43:04.354 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 12:43:04.355 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-30 12:43:04.356 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-30 12:43:04.357 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.357 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-30 12:43:04.357 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-30 12:43:04.357 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-30 12:43:04.357 (InvoicesAllClientDataDbVsSiteTest.java:44) - Tables are equals
[INFO ] 2018-08-30 12:43:04.357 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-30 12:43:04.357 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-30 12:43:05.248 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-30 12:43:05.273 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-30 12:43:05.438 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-30 12:43:05.439 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-30 12:43:05.439 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-30 12:43:05.440 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-30 12:43:07.537 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-30 12:43:07.623 (BaseTest.java:135) - Closing browser
