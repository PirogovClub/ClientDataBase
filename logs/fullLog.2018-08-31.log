[INFO ] 2018-08-31 10:40:02.907 (DealFromClientPageDbVsUI.java:15) - Get into Testtests.deals.DealFromClientPageDbVsUI
[DEBUG] 2018-08-31 10:40:02.917 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 10:40:02.928 (TestInvocesClientDataDbVsUI.java:21) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 10:40:02.928 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[ERROR] 2018-08-31 10:40:02.930 (DataBase.java:189) - no connection, can't run query DB
[INFO ] 2018-08-31 10:42:17.916 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 10:42:17.919 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 10:42:21.965 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 10:42:21.965 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 10:42:22.075 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 10:42:23.133 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 10:42:23.278 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 10:42:23.279 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 10:42:23.279 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 10:42:23.528 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 10:42:24.446 (TestInvocesClientDataDbVsUI.java:21) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 10:42:24.446 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 10:42:24.506 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 10:42:24.543 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 10:42:24.560 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 10:42:24.679 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 10:42:24.699 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 10:42:24.708 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 10:42:24.716 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 10:42:24.716 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 10:42:24.736 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 10:42:24.743 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 10:42:24.743 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 10:42:25.745 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-31 10:42:25.797 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 10:42:25.806 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-31 10:42:26.176 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-31 10:42:26.176 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 10:42:26.177 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-31 10:42:26.178 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 10:42:26.178 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 10:42:26.179 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-31 10:42:26.180 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-31 10:42:26.181 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 10:42:26.182 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-31 10:42:26.182 (TestInvocesClientDataDbVsUI.java:44) - Tables are equals
[INFO ] 2018-08-31 10:42:26.182 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 10:42:26.182 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 10:42:27.045 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 10:42:27.071 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 10:42:27.236 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 10:42:27.236 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-31 10:42:27.237 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 10:42:27.250 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 10:42:29.365 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 10:42:29.476 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 10:43:24.806 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 10:43:24.811 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 10:43:28.512 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 10:43:28.512 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 10:43:28.609 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 10:43:29.586 (DealFromClientPageDbVsUI.java:15) - Get into Testtests.deals.DealFromClientPageDbVsUI
[DEBUG] 2018-08-31 10:43:29.587 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[ERROR] 2018-08-31 10:43:39.655 (BasePOM.java:86) - Miss element org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: .//div[@class='display-grid']//table[@class='table table-hover'] (tried for 10 second(s) with 500 milliseconds interval)
[INFO ] 2018-08-31 10:43:39.656 (ClientProperties.java:211) - Reading table with Deals from page
[INFO ] 2018-08-31 10:43:49.693 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 10:43:51.799 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 10:43:51.898 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 10:43:52.582 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 10:43:52.583 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 10:43:55.910 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 10:43:55.911 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 10:43:55.994 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 10:43:56.987 (TestInvocesClientDataDbVsUI.java:21) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 10:43:56.988 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[ERROR] 2018-08-31 10:43:56.988 (DataBase.java:189) - no connection, can't run query DB
[INFO ] 2018-08-31 10:43:56.989 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 10:43:59.086 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 10:43:59.146 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 10:46:08.593 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 10:46:08.597 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 10:46:12.351 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 10:46:12.351 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 10:46:12.442 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 10:46:13.491 (TestInvocesClientDataDbVsUI.java:21) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 10:46:13.492 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[ERROR] 2018-08-31 10:46:13.492 (DataBase.java:189) - no connection, can't run query DB
[INFO ] 2018-08-31 10:46:13.494 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 10:46:15.626 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 10:46:15.720 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 10:50:05.316 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 10:50:05.321 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 10:50:09.207 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 10:50:09.207 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 10:50:09.297 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 10:50:10.241 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 10:50:10.421 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 10:50:10.422 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 10:50:10.422 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 10:50:10.656 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 10:50:11.571 (TestInvocesClientDataDbVsUI.java:21) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 10:50:11.572 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 10:50:11.628 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 10:50:11.663 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 10:50:11.671 (BasePOM.java:105) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 10:50:11.759 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 10:50:11.780 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 10:50:11.788 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 10:50:11.797 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 10:50:11.797 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 10:50:11.817 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 10:50:11.824 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 10:50:11.824 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 10:50:12.824 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-31 10:50:12.848 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 10:50:12.856 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-31 10:50:13.184 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-31 10:50:13.185 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:20) - 
1:9|2:Marie Rogue|3:6|4:UAH 1000|5:2018-06-07|6:YES|
1:10|2:Marie Rogue|3:6|4:UAH 1000|5:2018-07-07|6:YES|
1:11|2:Marie Rogue|3:8|4:UAH 3000|5:2018-08-19|6:NO|

[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:48) - Convert Int from Payment status: 8
[DEBUG] 2018-08-31 10:50:13.186 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - Convert Int from Payment status: 9
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-07-06|Payment status:YES|Mentor:James Howlett|Invoice Id:9|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:FROZEN|Employee Rate:500|Payment amount:UAH 1000|Payment date:2018-08-06|Payment status:YES|Mentor:James Howlett|Invoice Id:10|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Mentoring|Contract Date:2018-06-04|Contact ID:6| Price:1000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:UAH 3000|Payment date:2018-09-18|Payment status:NO|Mentor:Charles Xavier|Invoice Id:11|ContractDate:2017-07-11 00:00:00|Payment date From:2018-08-19|Payment date To:2018-09-18|ClientName:Marie Rogue|Payment Type:PREPAY|Type:PREPAY| Price Currency:UAH|Consultancy:Group Development|Contract Date:2018-08-16|Contact ID:8| Price:3000|

[INFO ] 2018-08-31 10:50:13.187 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - key:Payment amount value:UAH 1000
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - Compare: UAH 1000
[DEBUG] 2018-08-31 10:50:13.187 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-31 10:50:13.188 (PrintOuts.java:48) - Compare: 2018-06-07
[DEBUG] 2018-08-31 10:50:13.188 (DataTable.java:50) - Original
[DEBUG] 2018-08-31 10:50:13.188 (DataTable.java:51) - For key Payment date result is 2018-07-06
[DEBUG] 2018-08-31 10:50:13.188 (DataTable.java:52) - Not Equal to
[DEBUG] 2018-08-31 10:50:13.188 (DataTable.java:53) - For key Payment date result is 2018-06-07
[INFO ] 2018-08-31 10:50:13.188 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 10:50:13.189 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 10:50:15.291 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 10:50:15.385 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 11:05:53.578 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 11:05:53.583 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 11:05:58.524 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 11:05:58.524 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 11:05:58.615 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 11:05:59.534 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 11:05:59.534 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 11:05:59.542 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 11:05:59.695 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 11:05:59.696 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 11:05:59.696 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 11:05:59.933 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 11:06:00.925 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 11:06:00.980 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 11:06:01.015 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 11:06:01.023 (BasePOM.java:105) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 11:06:01.117 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:06:01.137 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:06:01.144 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 11:06:01.152 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 11:06:01.152 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:06:01.173 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:06:01.184 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 11:06:01.184 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 11:06:02.185 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 11:06:02.212 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Kurt Wagner')]
[DEBUG] 2018-08-31 11:06:02.212 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Kurt Wagner')]
[INFO ] 2018-08-31 11:06:03.111 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 11:06:03.112 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 11:06:03.139 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 11:06:03.379 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 11:06:03.379 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-31 11:06:03.380 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 11:06:05.565 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 11:06:05.638 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 11:47:53.056 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 11:47:53.059 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 11:47:58.568 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 11:47:58.569 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 11:47:58.657 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 11:47:59.652 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 11:47:59.785 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 11:47:59.785 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 11:47:59.785 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 11:48:00.027 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 11:48:00.994 (TestInvocesClientDataDbVsUI.java:30) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 11:48:00.994 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 11:48:01.068 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 11:48:01.100 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 11:48:01.109 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 11:48:01.205 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:48:01.226 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:48:01.234 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 11:48:01.241 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 11:48:01.241 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:48:01.263 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:48:01.272 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 11:48:01.272 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 11:48:02.272 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-31 11:48:02.312 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 11:48:02.320 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-31 11:48:02.645 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-31 11:48:02.645 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 11:48:02.645 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-31 11:48:02.645 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-31 11:48:02.645 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-31 11:48:02.645 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:20) - 
1:5|2:Piotr Rasputin|3:3|4:USD 120|5:2018-06-06|6:YES|
1:6|2:Piotr Rasputin|3:3|4:USD 120|5:2018-07-06|6:YES|
1:7|2:Piotr Rasputin|3:3|4:USD 120|5:2018-08-06|6:YES|

[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-31 11:48:02.646 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Convert Int from Payment status: 4
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Convert Int from Payment status: 5
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Convert Int from Payment status: 6
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 11:48:02.647 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-06-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:5|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-07|Payment date To:2018-06-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-07-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:6|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-07|Payment date To:2018-07-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:1500|Payment amount:USD 120|Payment date:2018-08-06|Payment status:YES|Mentor:Ororo Munroe|Invoice Id:7|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-07|Payment date To:2018-08-06|ClientName:Piotr Rasputin|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:USD|Consultancy:Group Development|Contract Date:2018-05-07|Contact ID:3| Price:120|

[INFO ] 2018-08-31 11:48:02.647 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:Payment date value:2018-06-06
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - Compare: 2018-06-06
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:Invoice Id value:5
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - Compare: 5
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.648 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:Payment date value:2018-07-06
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: 2018-07-06
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:Invoice Id value:6
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: 6
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-31 11:48:02.649 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:Payment amount value:USD 120
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - Compare: USD 120
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:Payment date value:2018-08-06
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - Compare: 2018-08-06
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:Invoice Id value:7
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - Compare: 7
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:ClientName value:Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - Compare: Piotr Rasputin
[DEBUG] 2018-08-31 11:48:02.650 (PrintOuts.java:48) - key:Contact ID value:3
[DEBUG] 2018-08-31 11:48:02.651 (PrintOuts.java:48) - Compare: 3
[INFO ] 2018-08-31 11:48:02.651 (TestInvocesClientDataDbVsUI.java:53) - Tables are equals
[INFO ] 2018-08-31 11:48:02.651 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 11:48:02.652 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 11:48:04.751 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 11:48:04.837 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 11:58:30.316 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 11:58:30.320 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 11:58:34.027 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 11:58:34.027 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 11:58:34.119 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 11:58:35.110 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 11:58:35.110 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 11:58:35.117 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 11:58:35.256 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 11:58:35.257 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 11:58:35.257 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 11:58:35.494 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 11:58:36.451 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 11:58:36.512 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 11:58:36.546 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 11:58:36.555 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 11:58:36.650 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:58:36.671 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:58:36.679 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 11:58:36.687 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 11:58:36.687 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 11:58:36.708 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 11:58:36.715 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 11:58:36.716 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 11:58:37.716 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 11:58:37.743 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 11:58:37.743 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[INFO ] 2018-08-31 11:58:38.584 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 11:58:38.585 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 11:58:38.614 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 11:58:38.802 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 11:58:38.803 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 11:58:40.895 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 11:58:41.002 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:00:19.412 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:00:19.416 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:00:23.090 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:00:23.090 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:00:23.182 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 12:00:24.278 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:00:24.278 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:00:24.285 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:00:24.429 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:00:24.430 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:00:24.430 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:00:24.672 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:00:25.646 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:00:25.697 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:00:25.733 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:00:25.759 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:00:25.850 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:00:25.870 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:00:25.878 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:00:25.886 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:00:25.886 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:00:25.907 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:00:25.915 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:00:25.915 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:00:26.915 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:00:26.938 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:00:26.939 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:00:27.817 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 12:00:27.818 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:00:27.845 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:00:28.084 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:00:28.085 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:00:30.181 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:00:30.268 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:12:39.421 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:12:39.425 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:12:44.272 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:12:44.272 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:12:44.361 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 12:12:45.418 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:12:45.418 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:12:45.425 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:12:45.577 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:12:45.578 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:12:45.578 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:12:45.816 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:12:46.878 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:12:46.932 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:12:46.968 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:12:46.976 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:12:47.062 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:12:47.083 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:12:47.091 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:12:47.098 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:12:47.099 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:12:47.119 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:12:47.126 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:12:47.126 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:12:48.127 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:12:48.150 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:12:48.151 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:12:49.076 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 12:12:49.076 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:12:49.101 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:12:49.379 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[DEBUG] 2018-08-31 12:12:49.380 (DealsTestBase.java:139) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[ERROR] 2018-08-31 12:12:49.380 (DataBase.java:189) - no connection, can't run query DB
[INFO ] 2018-08-31 12:12:49.380 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-31 12:12:49.381 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:12:51.492 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:12:51.578 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:13:13.965 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:13:13.969 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:13:17.642 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:13:17.642 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:13:17.730 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 12:13:18.809 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:13:18.810 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:13:18.818 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:13:18.971 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:13:18.972 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:13:18.972 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:13:19.210 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:13:20.149 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:13:20.207 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:13:20.243 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:13:20.251 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:13:20.339 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:13:20.359 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:13:20.367 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:13:20.376 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:13:20.376 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:13:20.396 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:13:20.404 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:13:20.404 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:13:21.404 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:13:21.428 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 12:13:21.428 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[INFO ] 2018-08-31 12:13:22.288 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 12:13:22.289 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:13:22.317 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:13:22.501 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[DEBUG] 2018-08-31 12:13:22.501 (DealsTestBase.java:139) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[ERROR] 2018-08-31 12:13:22.501 (DataBase.java:189) - no connection, can't run query DB
[INFO ] 2018-08-31 12:13:22.502 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-31 12:13:22.502 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:13:24.596 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:13:24.677 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:15:18.572 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:15:18.576 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:15:22.615 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:15:22.615 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:15:22.711 (LoginPage.java:61) - pressed Submit
[INFO ] 2018-08-31 12:15:23.810 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:15:23.810 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:15:23.817 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:15:23.963 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:15:23.965 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:15:23.966 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:15:24.229 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:15:25.246 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:15:25.296 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:15:25.328 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:15:25.336 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:15:25.421 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:15:25.443 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:15:25.451 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:15:25.461 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:15:25.461 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:15:25.481 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:15:25.489 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:15:25.489 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:15:26.489 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:15:26.516 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 12:15:26.517 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[INFO ] 2018-08-31 12:15:27.381 (DealFromClientPageDbVsUI.java:30) - Get into a client page
[DEBUG] 2018-08-31 12:15:27.382 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:15:27.411 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:15:27.598 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:15:27.598 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:15:27.599 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:15:27.711 (DataBase.java:60) - You successfully connected to database now
[DEBUG] 2018-08-31 12:15:27.711 (DealsTestBase.java:140) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[INFO ] 2018-08-31 12:15:27.753 (DataTable.java:26) - Checking tables for equality
[INFO ] 2018-08-31 12:15:27.754 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:15:29.846 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:15:29.955 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:20:52.330 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:20:52.334 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:20:56.253 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:20:56.253 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:20:56.342 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:20:57.388 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:20:57.522 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:20:57.522 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:20:57.522 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:20:57.524 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:20:57.643 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:20:57.644 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:20:57.645 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:20:57.879 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:20:58.897 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:20:58.968 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:20:59.002 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:20:59.009 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:20:59.093 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:20:59.113 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:20:59.122 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:20:59.132 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:20:59.132 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:20:59.153 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:20:59.174 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:20:59.174 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:21:00.176 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:21:00.200 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:21:00.201 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:21:01.100 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:21:01.101 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:21:01.131 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:21:01.367 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:21:01.367 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:21:01.368 (DealsTestBase.java:145) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[INFO ] 2018-08-31 12:21:01.407 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:21:01.408 (DataTable.java:45) - Tables are different size
[INFO ] 2018-08-31 12:21:01.411 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:21:01.413 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:21:03.520 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:21:03.609 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:37:26.517 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:37:26.521 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:37:30.217 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:37:30.217 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:37:30.310 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:37:31.339 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:37:31.489 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:37:31.490 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:37:31.491 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:37:31.501 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:37:31.617 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:37:31.618 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:37:31.619 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:37:31.872 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:37:32.824 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:37:32.885 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:37:32.919 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:37:32.928 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:37:33.023 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:37:33.043 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:37:33.051 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:37:33.060 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:37:33.061 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:37:33.081 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:37:33.089 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:37:33.089 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:37:34.089 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:37:34.137 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[DEBUG] 2018-08-31 12:37:34.137 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Raven Darkhölme')]
[INFO ] 2018-08-31 12:37:35.025 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:37:35.029 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:37:35.057 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:37:35.248 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:37:35.248 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:37:35.248 (DealsTestBase.java:87) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    
       
       consultancy inner join (client inner join (employee inner join (Contract inner join deal 
       on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY  deal.id
[INFO ] 2018-08-31 12:37:35.282 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - key:Consultancy value:Personal Mentor
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - Compare: Personal Mentor
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - key:Mentor value:Charles Xavier
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - Compare: Charles Xavier
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - key:Open date value:2018-04-05
[DEBUG] 2018-08-31 12:37:35.283 (PrintOuts.java:48) - Compare: 05-апр-2018
[DEBUG] 2018-08-31 12:37:35.283 (DataTable.java:58) - Original
[DEBUG] 2018-08-31 12:37:35.283 (DataTable.java:59) - For key Open date result is 2018-04-05
[DEBUG] 2018-08-31 12:37:35.284 (DataTable.java:60) - Not Equal to
[DEBUG] 2018-08-31 12:37:35.284 (DataTable.java:61) - For key Open date result is 05-апр-2018
[INFO ] 2018-08-31 12:37:35.284 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:37:35.285 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:37:37.376 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:37:37.441 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:41:06.617 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:41:06.621 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:41:11.436 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:41:11.436 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:41:11.530 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:41:12.631 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:41:12.786 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:41:12.786 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:41:12.786 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:41:12.788 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:41:12.912 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:41:12.913 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:41:12.913 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:41:13.168 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:41:14.135 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:41:14.188 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:41:14.223 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:41:14.231 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:41:14.315 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:41:14.335 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:41:14.344 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:41:14.352 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:41:14.352 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:41:14.372 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:41:14.380 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:41:14.380 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:41:15.381 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:41:15.404 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:41:15.404 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:41:16.310 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:41:16.311 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:41:16.337 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:41:16.612 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:41:16.612 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 12:41:16.612 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:20) - 
1:1|2:Mentoring|3:NEW|4:16-авг-2018|5:----|
1:6|2:Group Development|3:ACTIVE|4:07-мая-2018|5:Ororo Munroe|

[DEBUG] 2018-08-31 12:41:16.613 (PrintOuts.java:48) - Convert date from Open date: 16-авг-2018
[DEBUG] 2018-08-31 12:41:16.630 (ConverDates.java:75) - success: true. input: 16-авг-2018 → localDate: 2018-08-16 → formatted: 16-авг.-2018 → outputImproper: 16-авг-2018
[DEBUG] 2018-08-31 12:41:16.630 (ConverDates.java:84) - Send converted date 2018-08-16
[DEBUG] 2018-08-31 12:41:16.630 (PrintOuts.java:48) - Converted date:2018-08-16
[DEBUG] 2018-08-31 12:41:16.630 (PrintOuts.java:48) - Convert date from Open date: 07-мая-2018
[DEBUG] 2018-08-31 12:41:16.630 (ConverDates.java:75) - success: true. input: 07-мая-2018 → localDate: 2018-05-07 → formatted: 07-мая-2018 → outputImproper: 07-мая-2018
[DEBUG] 2018-08-31 12:41:16.630 (ConverDates.java:84) - Send converted date 2018-05-07
[DEBUG] 2018-08-31 12:41:16.630 (PrintOuts.java:48) - Converted date:2018-05-07
[DEBUG] 2018-08-31 12:41:16.630 (DealsTestBase.java:87) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    
       
       consultancy inner join (client inner join (employee inner join (Contract inner join deal 
       on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY  deal.id
[INFO ] 2018-08-31 12:41:16.665 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:41:16.665 (DataTable.java:45) - Tables are different size
[INFO ] 2018-08-31 12:41:16.665 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:41:16.666 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:41:18.764 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:41:18.839 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:42:27.267 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:42:27.271 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:42:31.104 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:42:31.104 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:42:31.198 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:42:32.229 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:42:32.376 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:42:32.377 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:42:32.377 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:42:32.378 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:42:32.493 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:42:32.494 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:42:32.494 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:42:32.761 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:42:33.686 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:42:33.738 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:42:33.771 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:42:33.779 (BasePOM.java:105) - Typing Kurt Wagner into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:42:33.861 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:42:33.883 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:42:33.891 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:42:33.899 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:42:33.899 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:42:33.921 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:42:33.929 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:42:33.929 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:42:34.930 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:42:34.956 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Kurt Wagner')]
[DEBUG] 2018-08-31 12:42:34.956 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Kurt Wagner')]
[INFO ] 2018-08-31 12:42:35.919 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:42:35.919 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:42:35.947 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:42:36.188 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:42:36.189 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 12:42:36.189 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 12:42:36.190 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 12:42:36.190 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 12:42:36.190 (PrintOuts.java:20) - 
1:8|2:Mentoring|3:COMPLETED|4:17-янв-2018|5:Scott Summers|
1:7|2:Group Development|3:ACTIVE|4:13-июл-2018|5:Scott Summers|

[DEBUG] 2018-08-31 12:42:36.190 (PrintOuts.java:48) - Convert date from Open date: 17-янв-2018
[DEBUG] 2018-08-31 12:42:36.201 (ConverDates.java:75) - success: true. input: 17-янв-2018 → localDate: 2018-01-17 → formatted: 17-янв.-2018 → outputImproper: 17-янв-2018
[DEBUG] 2018-08-31 12:42:36.201 (ConverDates.java:84) - Send converted date 2018-01-17
[DEBUG] 2018-08-31 12:42:36.201 (PrintOuts.java:48) - Converted date:2018-01-17
[DEBUG] 2018-08-31 12:42:36.201 (PrintOuts.java:48) - Convert date from Open date: 13-июл-2018
[DEBUG] 2018-08-31 12:42:36.202 (ConverDates.java:75) - success: true. input: 13-июл-2018 → localDate: 2018-07-13 → formatted: 13-июл.-2018 → outputImproper: 13-июл-2018
[DEBUG] 2018-08-31 12:42:36.202 (ConverDates.java:84) - Send converted date 2018-07-13
[DEBUG] 2018-08-31 12:42:36.202 (PrintOuts.java:48) - Converted date:2018-07-13
[DEBUG] 2018-08-31 12:42:36.202 (DealsTestBase.java:87) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    
       
       consultancy inner join (client inner join (employee inner join (Contract inner join deal 
       on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Kurt Wagner' ORDER BY  deal.id
[INFO ] 2018-08-31 12:42:36.240 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:42:36.242 (PrintOuts.java:48) - key:Consultancy value:Group Development
[DEBUG] 2018-08-31 12:42:36.242 (PrintOuts.java:48) - Compare: Mentoring
[DEBUG] 2018-08-31 12:42:36.243 (DataTable.java:58) - Original
[DEBUG] 2018-08-31 12:42:36.244 (DataTable.java:59) - For key Consultancy result is Group Development
[DEBUG] 2018-08-31 12:42:36.244 (DataTable.java:60) - Not Equal to
[DEBUG] 2018-08-31 12:42:36.245 (DataTable.java:61) - For key Consultancy result is Mentoring
[INFO ] 2018-08-31 12:42:36.247 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:42:36.250 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:42:38.402 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:42:38.492 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:46:07.767 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:46:07.772 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:46:12.624 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:46:12.624 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:46:12.721 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:46:13.674 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:46:13.808 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:46:13.809 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:46:13.809 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:46:13.810 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:46:13.921 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:46:13.922 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:46:13.922 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:46:14.199 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:46:15.091 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:46:15.141 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:46:15.172 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:46:15.180 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:46:15.267 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:46:15.287 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:46:15.295 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:46:15.302 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:46:15.303 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:46:15.323 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:46:15.331 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:46:15.331 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:46:16.332 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:46:16.356 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:46:16.357 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:46:17.148 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:46:17.149 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:46:17.176 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:46:17.415 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:46:17.415 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:46:17.415 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 12:46:17.415 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 12:46:17.415 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 12:46:17.415 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:20) - 
1:1|2:Mentoring|3:NEW|4:16-авг-2018|5:----|
1:6|2:Group Development|3:ACTIVE|4:07-мая-2018|5:Ororo Munroe|

[DEBUG] 2018-08-31 12:46:17.416 (PrintOuts.java:48) - Convert date from Open date: 16-авг-2018
[DEBUG] 2018-08-31 12:46:17.428 (ConverDates.java:75) - success: true. input: 16-авг-2018 → localDate: 2018-08-16 → formatted: 16-авг.-2018 → outputImproper: 16-авг-2018
[DEBUG] 2018-08-31 12:46:17.428 (ConverDates.java:84) - Send converted date 2018-08-16
[DEBUG] 2018-08-31 12:46:17.428 (PrintOuts.java:48) - Converted date:2018-08-16
[DEBUG] 2018-08-31 12:46:17.428 (PrintOuts.java:48) - Convert date from Open date: 07-мая-2018
[DEBUG] 2018-08-31 12:46:17.428 (ConverDates.java:75) - success: true. input: 07-мая-2018 → localDate: 2018-05-07 → formatted: 07-мая-2018 → outputImproper: 07-мая-2018
[DEBUG] 2018-08-31 12:46:17.428 (ConverDates.java:84) - Send converted date 2018-05-07
[DEBUG] 2018-08-31 12:46:17.428 (PrintOuts.java:48) - Converted date:2018-05-07
[DEBUG] 2018-08-31 12:46:17.429 (DealsTestBase.java:87) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    
       
       consultancy inner join (client inner join (employee inner join (Contract inner join deal 
       on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY  deal.id
[INFO ] 2018-08-31 12:46:17.460 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:46:17.460 (DataTable.java:45) - Tables are different size
[INFO ] 2018-08-31 12:46:17.461 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:46:17.461 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:46:19.555 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:46:19.647 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 12:58:50.692 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 12:58:50.711 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 12:58:54.743 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 12:58:54.743 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 12:58:54.847 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 12:58:55.814 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:58:55.947 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:58:55.948 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 12:58:55.948 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 12:58:55.949 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 12:58:56.061 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 12:58:56.062 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 12:58:56.062 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 12:58:56.353 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 12:58:57.276 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 12:58:57.326 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 12:58:57.358 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 12:58:57.367 (BasePOM.java:105) - Typing Piotr Rasputin into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 12:58:57.450 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:58:57.470 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:58:57.478 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 12:58:57.486 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 12:58:57.486 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 12:58:57.507 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 12:58:57.514 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 12:58:57.514 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 12:58:58.514 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 12:58:58.539 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[DEBUG] 2018-08-31 12:58:58.539 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Piotr Rasputin')]
[INFO ] 2018-08-31 12:58:59.421 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 12:58:59.422 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:58:59.447 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 12:58:59.683 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 12:58:59.683 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 12:58:59.683 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 12:58:59.684 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 12:58:59.685 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 12:58:59.685 (PrintOuts.java:20) - 
1:1|2:Mentoring|3:NEW|4:16-авг-2018|5:----|
1:6|2:Group Development|3:ACTIVE|4:07-мая-2018|5:Ororo Munroe|

[DEBUG] 2018-08-31 12:58:59.685 (PrintOuts.java:48) - Convert date from Open date: 16-авг-2018
[DEBUG] 2018-08-31 12:58:59.697 (ConverDates.java:75) - success: true. input: 16-авг-2018 → localDate: 2018-08-16 → formatted: 16-авг.-2018 → outputImproper: 16-авг-2018
[DEBUG] 2018-08-31 12:58:59.697 (ConverDates.java:84) - Send converted date 2018-08-16
[DEBUG] 2018-08-31 12:58:59.697 (PrintOuts.java:48) - Converted date:2018-08-16
[DEBUG] 2018-08-31 12:58:59.697 (PrintOuts.java:48) - Convert date from Open date: 07-мая-2018
[DEBUG] 2018-08-31 12:58:59.697 (ConverDates.java:75) - success: true. input: 07-мая-2018 → localDate: 2018-05-07 → formatted: 07-мая-2018 → outputImproper: 07-мая-2018
[DEBUG] 2018-08-31 12:58:59.697 (ConverDates.java:84) - Send converted date 2018-05-07
[DEBUG] 2018-08-31 12:58:59.697 (PrintOuts.java:48) - Converted date:2018-05-07
[DEBUG] 2018-08-31 12:58:59.698 (DealsTestBase.java:83) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    deal inner join client on (client.id = deal.client_id) 
            inner join consultancy on (consultancy.id = deal.consultancy_id)
            left join (contract inner join employee  on (employee.id = contract.employee_id))  on (contract.deal_id = deal.id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Piotr Rasputin' ORDER BY  deal.id
[INFO ] 2018-08-31 12:58:59.730 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 12:58:59.730 (PrintOuts.java:48) - key:Consultancy value:Mentoring
[DEBUG] 2018-08-31 12:58:59.730 (PrintOuts.java:48) - Compare: Mentoring
[DEBUG] 2018-08-31 12:58:59.730 (PrintOuts.java:48) - key:Mentor value: 
[DEBUG] 2018-08-31 12:58:59.730 (PrintOuts.java:48) - Compare: ----
[DEBUG] 2018-08-31 12:58:59.730 (DataTable.java:58) - Original
[DEBUG] 2018-08-31 12:58:59.730 (DataTable.java:59) - For key Mentor result is  
[DEBUG] 2018-08-31 12:58:59.730 (DataTable.java:60) - Not Equal to
[DEBUG] 2018-08-31 12:58:59.730 (DataTable.java:61) - For key Mentor result is ----
[INFO ] 2018-08-31 12:58:59.731 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 12:58:59.731 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 12:59:01.852 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 12:59:01.922 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 13:08:00.216 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 13:08:00.220 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 13:08:05.086 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 13:08:05.087 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 13:08:05.183 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 13:08:06.177 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:08:06.325 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:08:06.325 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 13:08:06.325 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 13:08:06.327 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:08:06.441 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:08:06.446 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 13:08:06.447 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 13:08:06.779 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 13:08:07.866 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 13:08:07.917 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 13:08:07.950 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 13:08:07.958 (BasePOM.java:105) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 13:08:08.037 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:08:08.057 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:08:08.077 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 13:08:08.084 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 13:08:08.084 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:08:08.104 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:08:08.112 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 13:08:08.112 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 13:08:09.113 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 13:08:09.140 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[DEBUG] 2018-08-31 13:08:09.141 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[INFO ] 2018-08-31 13:08:10.046 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 13:08:10.047 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:08:10.085 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 13:08:10.379 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:08:10.380 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:08:10.380 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:08:10.381 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:08:10.381 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:08:10.381 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:09-авг-2018|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:28-мая-2018|5:James Howlett|

[DEBUG] 2018-08-31 13:08:10.381 (PrintOuts.java:48) - Convert date from Open date: 09-авг-2018
[DEBUG] 2018-08-31 13:08:10.394 (ConverDates.java:75) - success: true. input: 09-авг-2018 → localDate: 2018-08-09 → formatted: 09-авг.-2018 → outputImproper: 09-авг-2018
[DEBUG] 2018-08-31 13:08:10.394 (ConverDates.java:84) - Send converted date 2018-08-09
[DEBUG] 2018-08-31 13:08:10.394 (PrintOuts.java:48) - Converted date:2018-08-09
[DEBUG] 2018-08-31 13:08:10.394 (PrintOuts.java:48) - Convert date from Open date: 28-мая-2018
[DEBUG] 2018-08-31 13:08:10.394 (ConverDates.java:75) - success: true. input: 28-мая-2018 → localDate: 2018-05-28 → formatted: 28-мая-2018 → outputImproper: 28-мая-2018
[DEBUG] 2018-08-31 13:08:10.394 (ConverDates.java:84) - Send converted date 2018-05-28
[DEBUG] 2018-08-31 13:08:10.394 (PrintOuts.java:48) - Converted date:2018-05-28
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:2018-08-09|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:2018-05-28|5:James Howlett|

[DEBUG] 2018-08-31 13:08:10.395 (PrintOuts.java:48) - Check :Charles Xavier on Stub:----
[DEBUG] 2018-08-31 13:08:10.396 (PrintOuts.java:48) - After check :Charles Xavier
[DEBUG] 2018-08-31 13:08:10.396 (PrintOuts.java:48) - Check :James Howlett on Stub:----
[DEBUG] 2018-08-31 13:08:10.396 (PrintOuts.java:48) - After check :James Howlett
[DEBUG] 2018-08-31 13:08:10.396 (DealsTestBase.java:83) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    deal inner join client on (client.id = deal.client_id) 
            inner join consultancy on (consultancy.id = deal.consultancy_id)
            left join (contract inner join employee  on (employee.id = contract.employee_id))  on (contract.deal_id = deal.id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY  deal.id
[INFO ] 2018-08-31 13:08:10.431 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 13:08:10.431 (PrintOuts.java:48) - key:Consultancy value:Mentoring
[DEBUG] 2018-08-31 13:08:10.431 (PrintOuts.java:48) - Compare: Group Development
[DEBUG] 2018-08-31 13:08:10.431 (DataTable.java:58) - Original
[DEBUG] 2018-08-31 13:08:10.431 (DataTable.java:59) - For key Consultancy result is Mentoring
[DEBUG] 2018-08-31 13:08:10.432 (DataTable.java:60) - Not Equal to
[DEBUG] 2018-08-31 13:08:10.432 (DataTable.java:61) - For key Consultancy result is Group Development
[INFO ] 2018-08-31 13:08:10.432 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:08:10.433 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 13:08:12.554 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 13:08:12.627 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 13:12:23.243 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 13:12:23.247 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 13:12:27.153 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 13:12:27.153 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 13:12:27.244 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 13:12:28.288 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:12:28.434 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:12:28.434 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 13:12:28.434 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 13:12:28.435 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:12:28.548 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:12:28.549 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 13:12:28.549 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 13:12:28.808 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 13:12:29.726 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 13:12:29.777 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 13:12:29.810 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 13:12:29.819 (BasePOM.java:105) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 13:12:29.904 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:12:29.925 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:12:29.933 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 13:12:29.944 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 13:12:29.945 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:12:29.965 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:12:29.972 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 13:12:29.973 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 13:12:30.973 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 13:12:30.996 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[DEBUG] 2018-08-31 13:12:30.996 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[INFO ] 2018-08-31 13:12:31.902 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 13:12:31.903 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:12:31.929 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 13:12:32.168 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:12:32.168 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:12:32.169 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:12:32.170 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:09-авг-2018|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:28-мая-2018|5:James Howlett|

[DEBUG] 2018-08-31 13:12:32.170 (PrintOuts.java:48) - Convert date from Open date: 09-авг-2018
[DEBUG] 2018-08-31 13:12:32.181 (ConverDates.java:75) - success: true. input: 09-авг-2018 → localDate: 2018-08-09 → formatted: 09-авг.-2018 → outputImproper: 09-авг-2018
[DEBUG] 2018-08-31 13:12:32.182 (ConverDates.java:84) - Send converted date 2018-08-09
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:48) - Converted date:2018-08-09
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:48) - Convert date from Open date: 28-мая-2018
[DEBUG] 2018-08-31 13:12:32.182 (ConverDates.java:75) - success: true. input: 28-мая-2018 → localDate: 2018-05-28 → formatted: 28-мая-2018 → outputImproper: 28-мая-2018
[DEBUG] 2018-08-31 13:12:32.182 (ConverDates.java:84) - Send converted date 2018-05-28
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:48) - Converted date:2018-05-28
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:12:32.182 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:2018-08-09|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:2018-05-28|5:James Howlett|

[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:48) - Check :Charles Xavier on Stub:----
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:48) - After check :Charles Xavier
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:48) - Check :James Howlett on Stub:----
[DEBUG] 2018-08-31 13:12:32.183 (PrintOuts.java:48) - After check :James Howlett
[DEBUG] 2018-08-31 13:12:32.184 (DealsTestBase.java:83) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    deal inner join client on (client.id = deal.client_id) 
            inner join consultancy on (consultancy.id = deal.consultancy_id)
            left join (contract inner join employee  on (employee.id = contract.employee_id))  on (contract.deal_id = deal.id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY  CONCAT(employee.first_name, ' ', employee.last_name)
[INFO ] 2018-08-31 13:12:32.219 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 13:12:32.219 (PrintOuts.java:48) - key:Consultancy value:Group Development
[DEBUG] 2018-08-31 13:12:32.219 (PrintOuts.java:48) - Compare: Group Development
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - key:Mentor value:Charles Xavier
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - Compare: Charles Xavier
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - key:Open date value:2018-08-09
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - Compare: 2018-08-09
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - key:Id value:11
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - Compare: 11
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - key:Deal status value:ACTIVE
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - Compare: ACTIVE
[DEBUG] 2018-08-31 13:12:32.220 (PrintOuts.java:48) - key:Consultancy value:Mentoring
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - Compare: Mentoring
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - key:Mentor value:James Howlett
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - Compare: James Howlett
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - key:Open date value:2018-05-28
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - Compare: 2018-05-28
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - key:Id value:10
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - Compare: 10
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - key:Deal status value:FROZEN
[DEBUG] 2018-08-31 13:12:32.221 (PrintOuts.java:48) - Compare: FROZEN
[INFO ] 2018-08-31 13:12:32.222 (DealFromClientPageDbVsUI.java:43) - Tables are equals
[INFO ] 2018-08-31 13:12:32.222 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:12:32.222 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:12:32.223 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 13:12:34.336 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 13:12:34.440 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 13:13:24.904 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 13:13:24.908 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 13:13:29.704 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 13:13:29.704 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 13:13:29.803 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 13:13:30.769 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:13:30.918 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:13:30.918 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 13:13:30.918 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 13:13:31.153 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 13:13:32.073 (TestInvocesClientDataDbVsUI.java:30) - Get into Testtests.invoices.TestInvocesClientDataDbVsUI
[DEBUG] 2018-08-31 13:13:32.074 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 13:13:32.126 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Raven Darkhölme' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 13:13:32.163 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 13:13:32.171 (BasePOM.java:105) - Typing Raven Darkhölme into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 13:13:32.262 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:13:32.283 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:13:32.290 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 13:13:32.299 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 13:13:32.299 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:13:32.320 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:13:32.327 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 13:13:32.327 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 13:13:33.328 (JSWaiter.java:162) - wakeup from sleep for :1000
[DEBUG] 2018-08-31 13:13:33.355 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 13:13:33.363 (InvoicesMain.java:24) - Reading table from page
[DEBUG] 2018-08-31 13:13:33.742 (HtmlTable.java:95) - Read table By.xpath: .//table[@class='table table-hover']
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 2 result is Client
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 3 result is Contact ID
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 4 result is Payment amount
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 5 result is Payment date
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key 6 result is Payment status
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key Payment amount result is 4
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key Payment date result is 5
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key Payment status result is 6
[DEBUG] 2018-08-31 13:13:33.743 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:41) - For key Client result is 2
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:41) - For key Contact ID result is 3
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:20) - 
1:1|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-05-16|6:YES|
1:2|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-06-16|6:YES|
1:3|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-07-16|6:YES|
1:4|2:Raven Darkhölme|3:2|4:UAH 6000|5:2018-08-16|6:NO|

[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Enter rename from:Client to:ClientName
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Enter rename from:Id to:Invoice Id
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Enter convertInt2Bool: 
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Convert Int from Payment status: 1
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Convert Int from Payment status: 2
[DEBUG] 2018-08-31 13:13:33.744 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - Convert Int from Payment status: 3
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - Converted Bool:YES
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - Convert Int from Payment status: 0
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - Converted Bool:NO
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:20) - 
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-05-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:1|ContractDate:2017-07-11 00:00:00|Payment date From:2018-04-17|Payment date To:2018-05-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-06-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:2|ContractDate:2017-07-11 00:00:00|Payment date From:2018-05-17|Payment date To:2018-06-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-07-16|Payment status:YES|Mentor:Charles Xavier|Invoice Id:3|ContractDate:2017-07-11 00:00:00|Payment date From:2018-06-17|Payment date To:2018-07-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|
Employee Currency:UAH|Status:ACTIVE|Employee Rate:3000|Payment amount:UAH 6000|Payment date:2018-08-16|Payment status:NO|Mentor:Charles Xavier|Invoice Id:4|ContractDate:2017-07-11 00:00:00|Payment date From:2018-07-17|Payment date To:2018-08-16|ClientName:Raven Darkhölme|Payment Type:POSTPAY|Type:POSTPAY| Price Currency:UAH|Consultancy:Personal Mentor|Contract Date:2018-04-17|Contact ID:2| Price:6000|

[INFO ] 2018-08-31 13:13:33.745 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 13:13:33.745 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - key:Payment date value:2018-05-16
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - Compare: 2018-05-16
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - key:Invoice Id value:1
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - Compare: 1
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 13:13:33.746 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:Payment date value:2018-06-16
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: 2018-06-16
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:Invoice Id value:2
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 13:13:33.747 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:Payment date value:2018-07-16
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - Compare: 2018-07-16
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:Payment status value:YES
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - Compare: YES
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:Invoice Id value:3
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - Compare: 3
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.748 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: 2
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:Payment amount value:UAH 6000
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: UAH 6000
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:Payment date value:2018-08-16
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: 2018-08-16
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:Payment status value:NO
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: NO
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:Invoice Id value:4
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: 4
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:ClientName value:Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: Raven Darkhölme
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - key:Contact ID value:2
[DEBUG] 2018-08-31 13:13:33.749 (PrintOuts.java:48) - Compare: 2
[INFO ] 2018-08-31 13:13:33.750 (TestInvocesClientDataDbVsUI.java:53) - Tables are equals
[INFO ] 2018-08-31 13:13:33.750 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:13:33.750 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 13:13:35.880 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 13:13:35.962 (BaseTest.java:135) - Closing browser
[INFO ] 2018-08-31 13:13:36.624 (BaseTest.java:99) - --------------------Strarting Test------------
[INFO ] 2018-08-31 13:13:36.624 (BaseTest.java:106) - Starting browser
[INFO ] 2018-08-31 13:13:41.110 (LoginPage.java:98) - Found login form on the page, need to login
[INFO ] 2018-08-31 13:13:41.110 (LoginPage.java:69) - logining as admin
[INFO ] 2018-08-31 13:13:41.194 (LoginPage.java:61) - pressed Submit
[DEBUG] 2018-08-31 13:13:42.166 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:13:42.291 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:13:42.291 (DealFromClientPageDbVsUI.java:19) - Get into Testtests.deals.DealFromClientPageDbVsUI
[INFO ] 2018-08-31 13:13:42.291 (DealFromClientPageDbVsUI.java:20) - Going through invoces
[DEBUG] 2018-08-31 13:13:42.292 (DataBase.java:39) - PostgreSQL JDBC Driver successfully connected
[DEBUG] 2018-08-31 13:13:42.415 (DataBase.java:60) - You successfully connected to database now
[INFO ] 2018-08-31 13:13:42.415 (MainNavigation.java:79) - Clicking on to By.xpath: .//a[@href='/admin/invoices']
[INFO ] 2018-08-31 13:13:42.416 (MainNavigation.java:69) - Clicking on to By.xpath: .//span[contains(text(),'Счета')]
[DEBUG] 2018-08-31 13:13:42.702 (BasePOM.java:162) - Wait For By.xpath: .//a[@href='/admin/invoices']
[DEBUG] 2018-08-31 13:13:43.575 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency Order By RANDOM()
 LIMIT 1

[DEBUG] 2018-08-31 13:13:43.616 (InvocesTestBase.java:151) - 
SQLquery:select 
        invoiceext.id as "Invoice Id",
        CONCAT(client.first_name, ' ', client.last_name ) as "ClientName",
        invoiceext.contract_id as "Contact ID",
        CONCAT(money_client.currency,' ',money_client.amount) as "Payment amount",
        invoiceext.period_to as "Payment date",
        invoiceext.period_from as "Payment date From",
        invoiceext.period_to as "Payment date To",
        invoiceext.PaymentID as "Payment status",
        contract.contract_date as "Contract Date",
        contract.payment_type as "Payment Type",
        money_client.amount as " Price",
        money_client.currency as " Price Currency",
        consultancy.name as "Consultancy", 
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor",
        money_employee.amount "Employee Rate",
        money_employee.currency "Employee Currency",
        contract.created_date as "ContractDate",
        contract.payment_type as "Type",
        deal.status as "Status"
From    
        (select invoice.*, COALESCE(payment.id, 0) as "paymentid" FROM invoice left join  payment on  invoice.id=payment.invoice_id)
 as invoiceext
inner join (money as money_client inner join ( money as money_employee inner join (consultancy inner join (client inner join (employee inner join (Contract inner join deal 
        on (contract.deal_id = deal.id))
        on (employee.id = contract.employee_id))
        on (client.id = deal.client_id))
        on (consultancy.id = deal.consultancy_id))
        on (money_employee.id = contract.employee_rate_id))
        on (money_client.id = contract.price_id))
        on (invoiceext.contract_id = contract.id)
Group by
invoiceext.id,
invoiceext.contract_id,
client.first_name,
client.last_name,
consultancy.name,
employee.first_name,
employee.last_name,
contract.created_date,
contract.payment_type,
deal.status,
invoiceext.paymentid,
contract.contract_date,
invoiceext.period_from,
invoiceext.period_to,
money_client.amount,
 money_client.currency,
 money_employee.amount,
 money_employee.currency HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY invoiceext.id
[DEBUG] 2018-08-31 13:13:43.652 (BasePOM.java:162) - Wait For By.xpath: //input[@placeholder='Поиск']
[INFO ] 2018-08-31 13:13:43.661 (BasePOM.java:105) - Typing Marie Rogue into By.xpath: .//input[@placeholder='Поиск'] Overwrite:true wait after input mls: 1000
[DEBUG] 2018-08-31 13:13:43.736 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:13:43.757 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:13:43.764 (JSWaiter.java:46) - JQuery is Ready!
[DEBUG] 2018-08-31 13:13:43.772 (JSWaiter.java:93) - JS is Ready!
[DEBUG] 2018-08-31 13:13:43.772 (JSWaiter.java:156) - Going to sleep for :20
[DEBUG] 2018-08-31 13:13:43.792 (JSWaiter.java:162) - wakeup from sleep for :20
[DEBUG] 2018-08-31 13:13:43.799 (JSWaiter.java:144) - Angular is not defined on this site!
[DEBUG] 2018-08-31 13:13:43.800 (JSWaiter.java:156) - Going to sleep for :1000
[DEBUG] 2018-08-31 13:13:44.801 (JSWaiter.java:162) - wakeup from sleep for :1000
[INFO ] 2018-08-31 13:13:44.825 (BasePOM.java:141) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[DEBUG] 2018-08-31 13:13:44.826 (BasePOM.java:80) - Wait For By.xpath: .//a[contains(text(),'Marie Rogue')]
[INFO ] 2018-08-31 13:13:45.713 (DealFromClientPageDbVsUI.java:29) - Get into a client page
[DEBUG] 2018-08-31 13:13:45.714 (BasePOM.java:80) - Wait For By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:13:45.740 (ClientProperties.java:211) - Reading table with Deals from page
[DEBUG] 2018-08-31 13:13:45.975 (HtmlTable.java:95) - Read table By.xpath: .//div[@class='display-grid']//table[@class='table table-hover']
[INFO ] 2018-08-31 13:13:45.975 (ClientProperties.java:213) - Done Reading table with Deals from page
[DEBUG] 2018-08-31 13:13:45.975 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:13:45.975 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:13:45.975 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:13:45.975 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:09-авг-2018|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:28-мая-2018|5:James Howlett|

[DEBUG] 2018-08-31 13:13:45.976 (PrintOuts.java:48) - Convert date from Open date: 09-авг-2018
[DEBUG] 2018-08-31 13:13:45.985 (ConverDates.java:75) - success: true. input: 09-авг-2018 → localDate: 2018-08-09 → formatted: 09-авг.-2018 → outputImproper: 09-авг-2018
[DEBUG] 2018-08-31 13:13:45.985 (ConverDates.java:84) - Send converted date 2018-08-09
[DEBUG] 2018-08-31 13:13:45.985 (PrintOuts.java:48) - Converted date:2018-08-09
[DEBUG] 2018-08-31 13:13:45.985 (PrintOuts.java:48) - Convert date from Open date: 28-мая-2018
[DEBUG] 2018-08-31 13:13:45.986 (ConverDates.java:75) - success: true. input: 28-мая-2018 → localDate: 2018-05-28 → formatted: 28-мая-2018 → outputImproper: 28-мая-2018
[DEBUG] 2018-08-31 13:13:45.986 (ConverDates.java:84) - Send converted date 2018-05-28
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:48) - Converted date:2018-05-28
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key 1 result is Id
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key 2 result is Consultancy
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key 3 result is Deal status
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key 4 result is Open date
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key 5 result is Mentor
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key Consultancy result is 2
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key Mentor result is 5
[DEBUG] 2018-08-31 13:13:45.986 (PrintOuts.java:41) - For key Open date result is 4
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:41) - For key Id result is 1
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:41) - For key Deal status result is 3
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:20) - 
1:11|2:Group Development|3:ACTIVE|4:2018-08-09|5:Charles Xavier|
1:10|2:Mentoring|3:FROZEN|4:2018-05-28|5:James Howlett|

[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:48) - Check :Charles Xavier on Stub:----
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:48) - After check :Charles Xavier
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:48) - Check :James Howlett on Stub:----
[DEBUG] 2018-08-31 13:13:45.987 (PrintOuts.java:48) - After check :James Howlett
[DEBUG] 2018-08-31 13:13:45.987 (DealsTestBase.java:83) - 
SQLquery:select 
        deal.id as "Id",
        consultancy.name as "Consultancy", 
        deal.status as "Deal status",
        deal.open_date as "Open date",
        CONCAT(employee.first_name, ' ', employee.last_name) as "Mentor"
        
        
From    deal inner join client on (client.id = deal.client_id) 
            inner join consultancy on (consultancy.id = deal.consultancy_id)
            left join (contract inner join employee  on (employee.id = contract.employee_id))  on (contract.deal_id = deal.id)Group by
deal.id,
        consultancy.name,
        deal.status,
        deal.open_date,
        client.first_name,
        client.last_name,
        employee.first_name,
        employee.last_name HAVING CONCAT(client.first_name, ' ', client.last_name ) = 'Marie Rogue' ORDER BY  CONCAT(employee.first_name, ' ', employee.last_name)
[INFO ] 2018-08-31 13:13:46.019 (DataTable.java:26) - Checking tables for equality
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - key:Consultancy value:Group Development
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - Compare: Group Development
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - key:Mentor value:Charles Xavier
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - Compare: Charles Xavier
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - key:Open date value:2018-08-09
[DEBUG] 2018-08-31 13:13:46.019 (PrintOuts.java:48) - Compare: 2018-08-09
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Id value:11
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: 11
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Deal status value:ACTIVE
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: ACTIVE
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Consultancy value:Mentoring
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: Mentoring
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Mentor value:James Howlett
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: James Howlett
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Open date value:2018-05-28
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: 2018-05-28
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Id value:10
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: 10
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - key:Deal status value:FROZEN
[DEBUG] 2018-08-31 13:13:46.020 (PrintOuts.java:48) - Compare: FROZEN
[INFO ] 2018-08-31 13:13:46.020 (DealFromClientPageDbVsUI.java:43) - Tables are equals
[INFO ] 2018-08-31 13:13:46.021 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:13:46.021 (DataBase.java:74) - DB Connection close
[INFO ] 2018-08-31 13:13:46.021 (ScreenShots.java:22) - Resizing Page
[INFO ] 2018-08-31 13:13:48.123 (ScreenShots.java:35) - Making screenshot
[INFO ] 2018-08-31 13:13:48.196 (BaseTest.java:135) - Closing browser
